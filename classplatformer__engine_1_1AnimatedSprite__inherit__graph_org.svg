<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="209pt" height="892pt" viewBox="0 0 209 892"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 888)"><title>platformer_engine::AnimatedSprite</title><g id="node1" class="node"><title>Node1</title><g id="a_node1"><a xlink:title="AnimatedSprite class which is used to animate sprites."><polygon fill="#bfbfbf" stroke="#000" points="0 -.5 0 -266.5 201 -266.5 201 -.5 0 -.5"/><text x="8" y="-254.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">platformer_engine::</text><text x="100.5" y="-243.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">AnimatedSprite</text><polyline fill="none" stroke="#000" points="0 -236.5 201 -236.5"/><polyline fill="none" stroke="#000" points="0 -217.5 201 -217.5"/><text x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text><text x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ AnimatedSprite(std</text><text x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string spriteId, int</text><text x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">sortingLayer, int orderInLayer,</text><text x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">int spriteWidth, int spriteHeight,</text><text x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">int frameCount, int animationSpeed,</text><text x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">int spriteRow, platformer_engine::</text><text x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">SPIC_RendererFlip flip=platformer_engine</text><text x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::FLIP_NONE, spic::Color color=spic::Color</text><text x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::Transparent(), double spriteScale=1.0)</text><text x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Update()</text><text x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Draw(spic::Transform</text><text x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">transform)</text><text x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void ResetCurrentFrame()</text><text x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetCurrentFrame</text><text x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; int</text><text x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetFrameCount</text><text x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; int</text></a></g></g><g id="node2" class="node"><title>Node2</title><g id="a_node2"><a target="_top" xlink:href="classspic_1_1Sprite.html" xlink:title="A component representing a sprite (small image) @spicapi."><polygon fill="none" stroke="#000" points="5.5 -303.5 5.5 -547.5 195.5 -547.5 195.5 -303.5 5.5 -303.5"/><text x="100.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Sprite</text><polyline fill="none" stroke="#000" points="5.5 -528.5 195.5 -528.5"/><text x="13.5" y="-516.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _spriteId</text><text x="13.5" y="-505.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _spriteWidth</text><text x="13.5" y="-494.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _spriteHeight</text><text x="13.5" y="-483.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># double _spriteScale</text><polyline fill="none" stroke="#000" points="5.5 -476.5 195.5 -476.5"/><text x="13.5" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="13.5" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text><text x="13.5" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ Sprite(std::string</text><text x="13.5" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">spriteId, int sortingLayer,</text><text x="13.5" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">int orderInLayer, int spriteWidth,</text><text x="13.5" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">int spriteHeight, platformer_engine</text><text x="13.5" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::SPIC_RendererFlip flip=platformer</text><text x="13.5" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_engine::FLIP_NONE, Color color=Color</text><text x="13.5" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::Transparent(), double spriteScale=1.0)</text><text x="13.5" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetSpriteId()</text><text x="13.5" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const -&gt; std::string</text><text x="13.5" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetSpriteScale</text><text x="13.5" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; double</text><text x="13.5" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Render(spic::Transform</text><text x="13.5" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">transform)</text></a></g></g><g id="edge1" class="edge"><title>Node2-&gt;Node1</title><path fill="none" stroke="#191970" d="M100.5,-292.93C100.5,-284.16 100.5,-275.32 100.5,-266.55"/><polygon fill="none" stroke="#191970" points="97 -293.19 100.5 -303.19 104 -293.19 97 -293.19"/></g><g id="node3" class="node"><title>Node3</title><g id="a_node3"><a target="_top" xlink:href="classspic_1_1Component.html" xlink:title="Base class for all components."><polygon fill="none" stroke="#000" points="24 -584.5 24 -883.5 177 -883.5 177 -584.5 24 -584.5"/><text x="100.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Component</text><polyline fill="none" stroke="#000" points="24 -864.5 177 -864.5"/><polyline fill="none" stroke="#000" points="24 -845.5 177 -845.5"/><text x="32" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="32" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text><text x="32" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ Component()=default</text><text x="32" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ virtual ~Component</text><text x="32" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">()=default</text><text x="32" y="-778.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ Component(const Component</text><text x="32" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;other)=default</text><text x="32" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator=(const</text><text x="32" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Component &amp;other) -&gt;</text><text x="32" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Component &amp;=default</text><text x="32" y="-723.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ Component(Component</text><text x="32" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;&amp;other)=default</text><text x="32" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator=(Component</text><text x="32" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;&amp;other) -&gt; Component</text><text x="32" y="-679.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;=default</text><text x="32" y="-668.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto Active() const</text><text x="32" y="-657.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="32" y="-646.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Active(bool flag)</text><text x="32" y="-635.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetGameObject</text><text x="32" y="-624.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(std::weak_ptr&lt; GameObject</text><text x="32" y="-613.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; gObj)</text><text x="32" y="-602.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::weak_ptr&lt; GameObject</text><text x="32" y="-591.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; GetGameObject()</text></a></g></g><g id="edge2" class="edge"><title>Node3-&gt;Node2</title><path fill="none" stroke="#191970" d="M100.5,-574.23C100.5,-565.36 100.5,-556.53 100.5,-547.83"/><polygon fill="none" stroke="#191970" points="97 -574.24 100.5 -584.24 104 -574.24 97 -574.24"/></g></g></svg>