<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 ()
 -->
<!-- Title: spic::RigidBody Pages: 1 -->
<svg width="161pt" height="842pt"
 viewBox="0.00 0.00 161.00 842.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 838)">
<title>spic::RigidBody</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="A component representing a rigid body.">
<polygon fill="#bfbfbf" stroke="black" points="4.5,-0.5 4.5,-497.5 148.5,-497.5 148.5,-0.5 4.5,-0.5"/>
<text text-anchor="middle" x="76.5" y="-485.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::RigidBody</text>
<polyline fill="none" stroke="black" points="4.5,-478.5 148.5,-478.5 "/>
<text text-anchor="middle" x="76.5" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="4.5,-459.5 148.5,-459.5 "/>
<text text-anchor="start" x="12.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RigidBody()</text>
<text text-anchor="start" x="12.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RigidBody(const Physics</text>
<text text-anchor="start" x="12.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">Template &amp;physicsTemplate)</text>
<text text-anchor="start" x="12.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="12.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="12.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void AddForce</text>
<text text-anchor="start" x="12.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const Point &amp;forceDirection,</text>
<text text-anchor="start" x="12.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double speedMultiplier)</text>
<text text-anchor="start" x="12.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void BodyType(BodyType</text>
<text text-anchor="start" x="12.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00"> bodyType)</text>
<text text-anchor="start" x="12.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto BodyType() &#45;&gt;</text>
<text text-anchor="start" x="12.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00"> enum BodyType</text>
<text text-anchor="start" x="12.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto CanMoveTo(Collision</text>
<text text-anchor="start" x="12.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">Point point) &#45;&gt; bool</text>
<text text-anchor="start" x="12.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void AllowMoveTo(Collision</text>
<text text-anchor="start" x="12.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">Point point)</text>
<text text-anchor="start" x="12.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void DenyMoveTo(Collision</text>
<text text-anchor="start" x="12.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">Point point)</text>
<text text-anchor="start" x="12.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetMaxSpeed()</text>
<text text-anchor="start" x="12.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; Point</text>
<text text-anchor="start" x="12.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetVelocity()</text>
<text text-anchor="start" x="12.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; Point</text>
<text text-anchor="start" x="12.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetHeading() const</text>
<text text-anchor="start" x="12.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; Point</text>
<text text-anchor="start" x="12.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetGravityScale</text>
<text text-anchor="start" x="12.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; float</text>
<text text-anchor="start" x="12.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetMass() const</text>
<text text-anchor="start" x="12.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; float</text>
<text text-anchor="start" x="12.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetFriction()</text>
<text text-anchor="start" x="12.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; float</text>
<text text-anchor="start" x="12.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetHeading()</text>
<text text-anchor="start" x="12.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetVelocity(Point</text>
<text text-anchor="start" x="12.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> velocity)</text>
<text text-anchor="start" x="12.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetMass(float</text>
<text text-anchor="start" x="12.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> mass)</text>
<text text-anchor="start" x="12.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetGravityScale</text>
<text text-anchor="start" x="12.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">(float gravityScale)</text>
<text text-anchor="start" x="12.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetMaxSpeed(Point</text>
<text text-anchor="start" x="12.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> maxSpeed)</text>
<text text-anchor="start" x="12.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetFriction(float</text>
<text text-anchor="start" x="12.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> friction)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classspic_1_1Component.html" target="_top" xlink:title="Base class for all components.">
<polygon fill="none" stroke="black" points="0,-534.5 0,-833.5 153,-833.5 153,-534.5 0,-534.5"/>
<text text-anchor="middle" x="76.5" y="-821.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Component</text>
<polyline fill="none" stroke="black" points="0,-814.5 153,-814.5 "/>
<text text-anchor="middle" x="76.5" y="-802.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-795.5 153,-795.5 "/>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Component()=default</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~Component</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">()=default</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Component(const Component</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;other)=default</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator=(const</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Component &amp;other) &#45;&gt;</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Component &amp;=default</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Component(Component</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;other)=default</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator=(Component</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;other) &#45;&gt; Component</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;=default</text>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Active() const</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Active(bool flag)</text>
<text text-anchor="start" x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void SetGameObject</text>
<text text-anchor="start" x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; gObj)</text>
<text text-anchor="start" x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; GetGameObject()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M76.5,-524.1C76.5,-515.37 76.5,-506.5 76.5,-497.56"/>
<polygon fill="none" stroke="midnightblue" points="73,-524.29 76.5,-534.29 80,-524.29 73,-524.29"/>
</g>
</g>
</svg>
