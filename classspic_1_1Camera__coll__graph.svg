<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="main" onload="init(evt)" version="1.1" xml:space="preserve"><style type="text/css">.edge:hover path{stroke:red}.edge:hover polygon{stroke:red;fill:red}</style><script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script><defs><circle id="rim" cx="0" cy="0" r="7"/><circle id="rim2" cx="0" cy="0" r="3.5"/><g id="zoomPlus"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="zoomplus.mouseover" end="zoomplus.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M-4,0h8M0,-4v8" pointer-events="none"/></g><g id="zoomMin"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="zoomminus.mouseover" end="zoomminus.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M-4,0h8" pointer-events="none"/></g><g id="dirArrow"><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g><g id="resetDef"><use fill="#404040" xlink:href="#rim2"><set attributeName="fill" begin="reset.mouseover" end="reset.mouseout" to="#808080"/></use></g></defs><script type="text/javascript">var viewWidth = 184; var viewHeight = 1328; var sectionId = &apos;dynsection-1&apos;;</script><script xlink:href="svgpan.js"/><svg id="graph" class="graph"><g id="viewport"><title>spic::Camera</title><g id="node1" class="node"><title>Node1</title><g id="a_node1"><a xlink:title="Class representing a point of view towards the game scene. @spicapi."><polygon fill="#bfbfbf" stroke="#000" points="7.5 -.5 7.5 -156.5 168.5 -156.5 168.5 -.5 7.5 -.5"/><text x="88" y="-144.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Camera</text><polyline fill="none" stroke="#000" points="7.5 -137.5 168.5 -137.5"/><polyline fill="none" stroke="#000" points="7.5 -118.5 168.5 -118.5"/><text x="15.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ Camera(const std::</text><text x="15.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">string &amp;name, const</text><text x="15.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag, spic</text><text x="15.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::Color backgroundColor,</text><text x="15.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">double aspectWidth, double</text><text x="15.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">aspectHeight)</text><text x="15.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Zoom(double aspectWidth,</text><text x="15.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">double aspectHeight)</text><text x="15.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double GetAspectWidth()</text><text x="15.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double GetAspectHeight()</text></a></g></g><g id="node2" class="node"><title>Node2</title><g id="a_node2"><a target="_top" xlink:href="classspic_1_1GameObject.html" xlink:title="Any object which should be represented on screen."><polygon fill="none" stroke="#000" points="0 -194.5 0 -1065.5 176 -1065.5 176 -194.5 0 -194.5"/><text x="88" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::GameObject</text><polyline fill="none" stroke="#000" points="0 -1046.5 176 -1046.5"/><text x="8" y="-1034.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _name</text><text x="8" y="-1023.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _tag</text><text x="8" y="-1012.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># bool _active</text><text x="8" y="-1001.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _layer</text><text x="8" y="-990.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::map&lt; std::string,</text><text x="8" y="-979.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::vector&lt; std::shared</text><text x="8" y="-968.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt; &gt; &gt; _components</text><text x="8" y="-957.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::weak_ptr&lt; GameObject</text><text x="8" y="-946.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; _self</text><text x="8" y="-935.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _ownerId</text><text x="8" y="-924.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># static std::map&lt; std</text><text x="8" y="-913.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string, std::shared</text><text x="8" y="-902.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; GameObject &gt; &gt;</text><text x="8" y="-891.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_instances</text><polyline fill="none" stroke="#000" points="0 -884.5 176 -884.5"/><text x="8" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="8" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text><text x="8" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="8" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name)</text><text x="8" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="8" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name, const</text><text x="8" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag)</text><text x="8" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject &amp; operator</text><text x="8" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=(const GameObject &amp;other)</text><text x="8" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ operator bool()</text><text x="8" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator!=(const</text><text x="8" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator==(const</text><text x="8" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetName() -&gt; std</text><text x="8" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string</text><text x="8" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void AddComponent(std</text><text x="8" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; Component</text><text x="8" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; component)</text><text x="8" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponent()</text><text x="8" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const -&gt; std::shared</text><text x="8" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt;</text><text x="8" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponents</text><text x="8" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; std::vector</text><text x="8" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; std::shared_ptr&lt; Component &gt;&gt;</text><text x="8" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Active(bool flag)</text><text x="8" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto Active() const</text><text x="8" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto IsActiveInWorld</text><text x="8" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; bool</text><text x="8" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetTransform()</text><text x="8" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; Transform</text><text x="8" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetTransform(const</text><text x="8" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Transform &amp;transform)</text><text x="8" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetOwnerId(int uid)</text><text x="8" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetOwnerId()</text><text x="8" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; int</text><text x="8" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto Find(const</text><text x="8" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;name) -&gt;</text><text x="8" y="-421.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::shared_ptr&lt; GameObject &gt;</text><text x="8" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindGameObjects</text><text x="8" y="-399.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">WithTag(const std::string</text><text x="8" y="-388.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;tag) -&gt; std::vector&lt; std</text><text x="8" y="-377.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="8" y="-366.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindWithTag</text><text x="8" y="-355.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;tag)</text><text x="8" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; std::shared_ptr&lt; GameObject &gt;</text><text x="8" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectOf</text><text x="8" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="8" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::shared_ptr</text><text x="8" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; GameObject &gt;</text><text x="8" y="-289.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectsOf</text><text x="8" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="8" y="-267.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::vector&lt; std</text><text x="8" y="-256.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="8" y="-245.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-234.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(std::shared_ptr&lt; GameObject</text><text x="8" y="-223.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; obj)</text><text x="8" y="-212.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-201.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(Component *obj)</text></a></g></g><g id="edge1" class="edge"><title>Node2-&gt;Node1</title><path fill="none" stroke="#191970" d="M88,-184.16C88,-174.53 88,-165.36 88,-156.74"/><polygon fill="none" stroke="#191970" points="84.5 -184.36 88 -194.36 91.5 -184.36 84.5 -184.36"/></g><g id="node3" class="node"><title>Node3</title><g id="a_node3"><a target="_top" xlink:href="structspic_1_1Transform.html" xlink:title="Instances of this class represent specific 2D transformations. @spicapi."><polygon fill="none" stroke="#000" points="30.5 -1113.5 30.5 -1192.5 145.5 -1192.5 145.5 -1113.5 30.5 -1113.5"/><text x="88" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Transform</text><polyline fill="none" stroke="#000" points="30.5 -1173.5 145.5 -1173.5"/><text x="38.5" y="-1161.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double rotation</text><text x="38.5" y="-1150.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double scale</text><polyline fill="none" stroke="#000" points="30.5 -1143.5 145.5 -1143.5"/><text x="38.5" y="-1131.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="38.5" y="-1120.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text></a></g></g><g id="edge2" class="edge"><title>Node3-&gt;Node2</title><path fill="none" stroke="#404040" d="M88,-1113.27C88,-1103.05 88,-1091.11 88,-1077.82"/><polygon fill="none" stroke="#404040" points="88 -1077.79 84 -1071.79 88 -1065.79 92 -1071.79 88 -1077.79"/><text x="115.5" y="-1087" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">#_transform</text></g><g id="node4" class="node"><title>Node4</title><g id="a_node4"><a target="_top" xlink:href="structspic_1_1Point.html" xlink:title="Struct representing both a 2D point and a 2D vector. @spicapi."><polygon fill="none" stroke="#000" points="30.5 -1240.5 30.5 -1319.5 145.5 -1319.5 145.5 -1240.5 30.5 -1240.5"/><text x="88" y="-1307.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Point</text><polyline fill="none" stroke="#000" points="30.5 -1300.5 145.5 -1300.5"/><text x="38.5" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double x</text><text x="38.5" y="-1277.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double y</text><polyline fill="none" stroke="#000" points="30.5 -1270.5 145.5 -1270.5"/><text x="38.5" y="-1258.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="38.5" y="-1247.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text></a></g></g><g id="edge3" class="edge"><title>Node4-&gt;Node3</title><path fill="none" stroke="#404040" d="M88,-1240.48C88,-1229.19 88,-1216.67 88,-1204.75"/><polygon fill="none" stroke="#404040" points="88 -1204.61 84 -1198.61 88 -1192.61 92 -1198.61 88 -1204.61"/><text x="109.5" y="-1214" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">+position</text></g></g></svg><g id="navigator" fill="#404254" transform="translate(0 0)"><rect width="60" height="60" x="0" y="0" fill="#f2f5e9" fill-opacity=".5" stroke="#606060" stroke-width=".5"/><use id="zoomplus" x="17" y="9" onmousedown="handleZoom(evt,'in')" xlink:href="#zoomPlus"/><use id="zoomminus" x="42" y="9" onmousedown="handleZoom(evt,'out')" xlink:href="#zoomMin"/><use id="reset" x="30" y="36" onmousedown="handleReset()" xlink:href="#resetDef"/><g id="arrowUp" onmousedown="handlePan(0,-1)" transform="translate(30 24)" xlink:href="#dirArrow"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="arrowUp.mouseover" end="arrowUp.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g><g id="arrowRight" onmousedown="handlePan(1,0)" transform="rotate(90) translate(36 -43)" xlink:href="#dirArrow"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="arrowRight.mouseover" end="arrowRight.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g><g id="arrowDown" onmousedown="handlePan(0,1)" transform="rotate(180) translate(-30 -48)" xlink:href="#dirArrow"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="arrowDown.mouseover" end="arrowDown.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g><g id="arrowLeft" onmousedown="handlePan(-1,0)" transform="rotate(270) translate(-36 17)" xlink:href="#dirArrow"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="arrowLeft.mouseover" end="arrowLeft.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g></g><svg width="100%" height="30" preserveAspectRatio="xMaxYMin meet" viewBox="0 0 15 15"><g id="arrow_out" transform="scale(0.3 0.3)"><a target="_base" xlink:href="classspic_1_1Camera__coll__graph_org.svg"><rect id="button" width="38" height="38" x="6" y="6" fill="#f2f5e9" fill-opacity=".5" stroke="#606060" stroke-width="1" rx="5" ry="5"/><path id="arrow" d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z" style="fill:#404040"/></a></g></svg></svg>