<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="221pt" height="1512" viewBox="0 0 220.5 1134"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1130)"><title>spic::UIObject</title><g id="node1" class="node"><title>Node1</title><g id="a_node1"><a xlink:title="Base class for a user interface object like Button or Text. @spicapi."><polygon fill="#bfbfbf" stroke="#000" points="66 -116.5 66 -206.5 183 -206.5 183 -116.5 66 -116.5"/><text x="124.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::UIObject</text><polyline fill="none" stroke="#000" points="66 -187.5 183 -187.5"/><polyline fill="none" stroke="#000" points="66 -168.5 183 -168.5"/><text x="74" y="-156.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ UIObject(const std</text><text x="74" y="-145.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name, const</text><text x="74" y="-134.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag, double</text><text x="74" y="-123.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">width, double height)</text></a></g></g><g id="node3" class="node"><title>Node3</title><g id="a_node3"><a target="_top" xlink:href="classspic_1_1Button.html" xlink:title="Instances of this class are clickable user interface items."><polygon fill="none" stroke="#000" points="0 -.5 0 -79.5 135 -79.5 135 -.5 0 -.5"/><text x="67.5" y="-67.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Button</text><polyline fill="none" stroke="#000" points="0 -60.5 135 -60.5"/><polyline fill="none" stroke="#000" points="0 -41.5 135 -41.5"/><text x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Click()</text><text x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnClick(std::function</text><text x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; void()&gt; callback)</text></a></g></g><g id="edge2" class="edge"><title>Node1-&gt;Node3</title><path fill="none" stroke="#191970" d="M99.09,-107.23C94.7,-98.02 90.2,-88.6 86.03,-79.86"/><polygon fill="none" stroke="#191970" points="95.97 -108.82 103.44 -116.34 102.29 -105.81 95.97 -108.82"/></g><g id="node4" class="node"><title>Node4</title><g id="a_node4"><a target="_top" xlink:href="classspic_1_1Text.html" xlink:title="Class representing a piece of text which can be rendered. @spicapi."><polygon fill="none" stroke="#000" points="153.5 -11.5 153.5 -68.5 211.5 -68.5 211.5 -11.5 153.5 -11.5"/><text x="182.5" y="-56.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Text</text><polyline fill="none" stroke="#000" points="153.5 -49.5 211.5 -49.5"/><polyline fill="none" stroke="#000" points="153.5 -30.5 211.5 -30.5"/></a></g></g><g id="edge3" class="edge"><title>Node1-&gt;Node4</title><path fill="none" stroke="#191970" d="M150.35,-107.23C156.81,-93.92 163.48,-80.18 169.06,-68.69"/><polygon fill="none" stroke="#191970" points="147.15 -105.82 145.93 -116.34 153.45 -108.87 147.15 -105.82"/></g><g id="node2" class="node"><title>Node2</title><g id="a_node2"><a target="_top" xlink:href="classspic_1_1GameObject.html" xlink:title="Any object which should be represented on screen."><polygon fill="none" stroke="#000" points="36.5 -243.5 36.5 -1125.5 212.5 -1125.5 212.5 -243.5 36.5 -243.5"/><text x="124.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::GameObject</text><polyline fill="none" stroke="#000" points="36.5 -1106.5 212.5 -1106.5"/><text x="44.5" y="-1094.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _name</text><text x="44.5" y="-1083.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _tag</text><text x="44.5" y="-1072.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># bool _active</text><text x="44.5" y="-1061.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _layer</text><text x="44.5" y="-1050.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::map&lt; std::string,</text><text x="44.5" y="-1039.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::vector&lt; std::shared</text><text x="44.5" y="-1028.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt; &gt; &gt; _components</text><text x="44.5" y="-1017.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># Transform _transform</text><text x="44.5" y="-1006.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::weak_ptr&lt; GameObject</text><text x="44.5" y="-995.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; _self</text><text x="44.5" y="-984.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _ownerId</text><text x="44.5" y="-973.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># static std::map&lt; std</text><text x="44.5" y="-962.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string, std::shared</text><text x="44.5" y="-951.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; GameObject &gt; &gt;</text><text x="44.5" y="-940.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_instances</text><polyline fill="none" stroke="#000" points="36.5 -933.5 212.5 -933.5"/><text x="44.5" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="44.5" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text><text x="44.5" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="44.5" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name)</text><text x="44.5" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="44.5" y="-866.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name, const</text><text x="44.5" y="-855.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag)</text><text x="44.5" y="-844.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject &amp; operator</text><text x="44.5" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=(const GameObject &amp;other)</text><text x="44.5" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ operator bool()</text><text x="44.5" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator!=(const</text><text x="44.5" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="44.5" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="44.5" y="-778.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator==(const</text><text x="44.5" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="44.5" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="44.5" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetName() -&gt; std</text><text x="44.5" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string</text><text x="44.5" y="-723.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void AddComponent(std</text><text x="44.5" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; Component</text><text x="44.5" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; component)</text><text x="44.5" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponent()</text><text x="44.5" y="-679.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const -&gt; std::shared</text><text x="44.5" y="-668.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt;</text><text x="44.5" y="-657.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponents</text><text x="44.5" y="-646.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; std::vector</text><text x="44.5" y="-635.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; std::shared_ptr&lt; Component &gt;&gt;</text><text x="44.5" y="-624.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Active(bool flag)</text><text x="44.5" y="-613.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto Active() const</text><text x="44.5" y="-602.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="44.5" y="-591.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto IsActiveInWorld</text><text x="44.5" y="-580.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; bool</text><text x="44.5" y="-569.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetTransform()</text><text x="44.5" y="-558.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; Transform</text><text x="44.5" y="-547.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetTransform(const</text><text x="44.5" y="-536.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Transform &amp;transform)</text><text x="44.5" y="-525.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetOwnerId(int uid)</text><text x="44.5" y="-514.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetOwnerId()</text><text x="44.5" y="-503.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; int</text><text x="44.5" y="-492.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto Find(const</text><text x="44.5" y="-481.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;name) -&gt;</text><text x="44.5" y="-470.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::shared_ptr&lt; GameObject &gt;</text><text x="44.5" y="-459.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindGameObjects</text><text x="44.5" y="-448.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">WithTag(const std::string</text><text x="44.5" y="-437.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;tag) -&gt; std::vector&lt; std</text><text x="44.5" y="-426.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="44.5" y="-415.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindWithTag</text><text x="44.5" y="-404.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;tag)</text><text x="44.5" y="-393.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; std::shared_ptr&lt; GameObject &gt;</text><text x="44.5" y="-382.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectOf</text><text x="44.5" y="-371.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="44.5" y="-360.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::shared_ptr</text><text x="44.5" y="-349.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; GameObject &gt;</text><text x="44.5" y="-338.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectsOf</text><text x="44.5" y="-327.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="44.5" y="-316.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::vector&lt; std</text><text x="44.5" y="-305.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="44.5" y="-294.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="44.5" y="-283.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(std::shared_ptr&lt; GameObject</text><text x="44.5" y="-272.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; obj)</text><text x="44.5" y="-261.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="44.5" y="-250.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(Component *obj)</text></a></g></g><g id="edge1" class="edge"><title>Node2-&gt;Node1</title><path fill="none" stroke="#191970" d="M124.5,-233.04C124.5,-223.42 124.5,-214.56 124.5,-206.6"/><polygon fill="none" stroke="#191970" points="121 -233.33 124.5 -243.33 128 -233.33 121 -233.33"/></g></g></svg>