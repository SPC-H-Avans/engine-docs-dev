<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="364pt" height="776pt" viewBox="0 0 363.5 776"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 772)"><title>platformer_engine::NetworkManager</title><g id="node1" class="node"><title>Node1</title><g id="a_node1"><a xlink:title="NetworkManager interface."><polygon fill="#bfbfbf" stroke="#000" points="96.5 -578.5 96.5 -767.5 251.5 -767.5 251.5 -578.5 96.5 -578.5"/><text x="104.5" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">platformer_engine::</text><text x="174" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">NetworkManager</text><polyline fill="none" stroke="#000" points="96.5 -737.5 251.5 -737.5"/><polyline fill="none" stroke="#000" points="96.5 -718.5 251.5 -718.5"/><text x="104.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ virtual void OnConnect</text><text x="104.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(int clientId)=0</text><text x="104.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ virtual void OnReceive</text><text x="104.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(int clientId, const uint8</text><text x="104.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_t *data, size_t dataLength)=0</text><text x="104.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ virtual void OnDisconnect</text><text x="104.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(int clientId)=0</text><text x="104.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ virtual void RegisterEvent</text><text x="104.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Handler(int eventID, std</text><text x="104.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::function&lt; void(int clientId,</text><text x="104.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const uint8_t *data, size_t</text><text x="104.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">dataLength)&gt; functionToCall)=0</text></a></g></g><g id="node2" class="node"><title>Node2</title><g id="a_node2"><a target="_top" xlink:href="classplatformer__engine_1_1ClientNetworkManager.html" xlink:title="The ClientNetworkManager class, handles the client side of the network."><polygon fill="none" stroke="#000" points="0 -50 0 -492 162 -492 162 -50 0 -50"/><text x="8" y="-480" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">platformer_engine::</text><text x="81" y="-469" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">ClientNetworkManager</text><polyline fill="none" stroke="#000" points="0 -462 162 -462"/><text x="8" y="-450" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::vector&lt; std::shared</text><text x="8" y="-439" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; spic::GameObject</text><text x="8" y="-428" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; &gt; GameObjects</text><polyline fill="none" stroke="#000" points="0 -421 162 -421"/><text x="8" y="-409" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ ClientNetworkManager()</text><text x="8" y="-398" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetLocalPlayerId</text><text x="8" y="-387" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; int</text><text x="8" y="-376" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto IsPartyleader</text><text x="8" y="-365" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; bool</text><text x="8" y="-354" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetConnectionStatus</text><text x="8" y="-343" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() -&gt; ConnectionStatus</text><text x="8" y="-332" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void ConnectToServer</text><text x="8" y="-321" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;ip,</text><text x="8" y="-310" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">int port)</text><text x="8" y="-299" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void DisconnectFromServer()</text><text x="8" y="-288" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void TravelToLevel</text><text x="8" y="-277" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;levelName)</text><text x="8" y="-266" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SendNetworkPackage</text><text x="8" y="-255" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const void *data, size</text><text x="8" y="-244" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_t dataLength, bool reliable=false)</text><text x="8" y="-233" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnConnect(int</text><text x="8" y="-222" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">clientId) override</text><text x="8" y="-211" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnReceive(int</text><text x="8" y="-200" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">clientId, const uint8</text><text x="8" y="-189" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_t *data, size_t dataLength)</text><text x="8" y="-178" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">override</text><text x="8" y="-167" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnDisconnect(int</text><text x="8" y="-156" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">clientId) override</text><text x="8" y="-145" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void RegisterEventHandler</text><text x="8" y="-134" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(int eventID, std::function</text><text x="8" y="-123" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; void(int clientId, const</text><text x="8" y="-112" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">uint8_t *data, size_t dataLength)</text><text x="8" y="-101" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; functionToCall) override</text><text x="8" y="-90" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void UpdateNetworkedGame</text><text x="8" y="-79" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">ObjectTransform(const</text><text x="8" y="-68" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">spic::Transform &amp;transform,</text><text x="8" y="-57" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const std::string &amp;gameObjectId)</text></a></g></g><g id="edge1" class="edge"><title>Node1-&gt;Node2</title><path fill="none" stroke="#191970" d="M149.93,-568.49C144.44,-544.84 138.39,-518.83 132.23,-492.34"/><polygon fill="none" stroke="#191970" points="146.58 -569.52 152.25 -578.47 153.4 -567.94 146.58 -569.52"/></g><g id="node3" class="node"><title>Node3</title><g id="a_node3"><a target="_top" xlink:href="classplatformer__engine_1_1ServerNetworkManager.html" xlink:title="The ServerNetworkManager class, handles all the networking for the server."><polygon fill="none" stroke="#000" points="180.5 -.5 180.5 -541.5 355.5 -541.5 355.5 -.5 180.5 -.5"/><text x="188.5" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">platformer_engine::</text><text x="268" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">ServerNetworkManager</text><polyline fill="none" stroke="#000" points="180.5 -511.5 355.5 -511.5"/><text x="188.5" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::vector&lt; Client</text><text x="188.5" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; Clients</text><text x="188.5" y="-477.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ std::vector&lt; std::shared</text><text x="188.5" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; spic::GameObject</text><text x="188.5" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; &gt; GameObjects</text><polyline fill="none" stroke="#000" points="180.5 -448.5 355.5 -448.5"/><text x="188.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ ServerNetworkManager</text><text x="188.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(spic::Scene &amp;scene,</text><text x="188.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">int playerLimit, int port)</text><text x="188.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetScene() -&gt;</text><text x="188.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">spic::Scene &amp;</text><text x="188.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetActiveScene</text><text x="188.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(spic::Scene &amp;scene)</text><text x="188.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SendUpdateToClients</text><text x="188.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const void *data, size</text><text x="188.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_t dataLength, bool reliable=false)</text><text x="188.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void InitializeClient</text><text x="188.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const Client &amp;client)</text><text x="188.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void ChooseNewPartyLeader()</text><text x="188.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Events()</text><text x="188.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnConnect(int</text><text x="188.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">clientId) override</text><text x="188.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnReceive(int</text><text x="188.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">clientId, const uint8</text><text x="188.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_t *data, size_t dataLength)</text><text x="188.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">override</text><text x="188.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnDisconnect(int</text><text x="188.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">clientId) override</text><text x="188.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void RegisterEventHandler</text><text x="188.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(int eventID, std::function</text><text x="188.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; void(int clientId, const</text><text x="188.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">uint8_t *data, size_t dataLength)</text><text x="188.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; functionToCall) override</text><text x="188.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void CreateNetworkedGame</text><text x="188.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Object(const spic::GameObject</text><text x="188.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;gameObjectToCreate)</text><text x="188.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void UpdateNetworkedGame</text><text x="188.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">ObjectTransform(const</text><text x="188.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">spic::Transform &amp;transform,</text><text x="188.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const std::string &amp;gameObjectId)</text><text x="188.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void DestroyNetworkedGame</text><text x="188.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Object(const std::string</text><text x="188.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;gameObjectId)</text><text x="188.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void HandleGameObjectTransform</text><text x="188.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">EventFromClient(int clientId,</text><text x="188.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const void *data, size_t length)</text></a></g></g><g id="edge2" class="edge"><title>Node1-&gt;Node3</title><path fill="none" stroke="#191970" d="M198.33,-568.48C200.36,-559.83 202.46,-550.88 204.62,-541.69"/><polygon fill="none" stroke="#191970" points="194.86 -567.93 195.98 -578.47 201.67 -569.54 194.86 -567.93"/></g></g></svg>