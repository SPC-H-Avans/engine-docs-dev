<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 ()
 -->
<!-- Title: spic::Text Pages: 1 -->
<svg width="208pt" height="1255pt"
 viewBox="0.00 0.00 208.00 1255.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1251)">
<title>spic::Text</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Class representing a piece of text which can be rendered. @spicapi.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-134.5 200,-134.5 200,-0.5 0,-0.5"/>
<text text-anchor="middle" x="100" y="-122.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Text</text>
<polyline fill="none" stroke="black" points="0,-115.5 200,-115.5 "/>
<text text-anchor="middle" x="100" y="-103.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-96.5 200,-96.5 "/>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Text(const std::string</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;name, double width,</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double height, const std</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;text, const std</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;fontPath, int fontSize</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">=24, Color color=Color::Black</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">(), Alignment alignment=Alignment::center)</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Render() override</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classspic_1_1UIObject.html" target="_top" xlink:title="Base class for a user interface object like Button or Text. @spicapi.">
<polygon fill="none" stroke="black" points="39,-171.5 39,-316.5 161,-316.5 161,-171.5 39,-171.5"/>
<text text-anchor="middle" x="100" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::UIObject</text>
<polyline fill="none" stroke="black" points="39,-297.5 161,-297.5 "/>
<text text-anchor="start" x="47" y="-285.5" font-family="Helvetica,sans-Serif" font-size="10.00"># double _width</text>
<text text-anchor="start" x="47" y="-274.5" font-family="Helvetica,sans-Serif" font-size="10.00"># double _height</text>
<polyline fill="none" stroke="black" points="39,-267.5 161,-267.5 "/>
<text text-anchor="start" x="47" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UIObject(const std</text>
<text text-anchor="start" x="47" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, double</text>
<text text-anchor="start" x="47" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00"> width, double height)</text>
<text text-anchor="start" x="47" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void Render()=0</text>
<text text-anchor="start" x="47" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetWidth() &#45;&gt;</text>
<text text-anchor="start" x="47" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double</text>
<text text-anchor="start" x="47" y="-189.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetHeight() &#45;&gt;</text>
<text text-anchor="start" x="47" y="-178.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M100,-161.25C100,-152.33 100,-143.33 100,-134.63"/>
<polygon fill="none" stroke="midnightblue" points="96.5,-161.27 100,-171.27 103.5,-161.27 96.5,-161.27"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classspic_1_1GameObject.html" target="_top" xlink:title="Any object which should be represented on screen.">
<polygon fill="none" stroke="black" points="12,-353.5 12,-1246.5 188,-1246.5 188,-353.5 12,-353.5"/>
<text text-anchor="middle" x="100" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::GameObject</text>
<polyline fill="none" stroke="black" points="12,-1227.5 188,-1227.5 "/>
<text text-anchor="start" x="20" y="-1215.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _name</text>
<text text-anchor="start" x="20" y="-1204.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _tag</text>
<text text-anchor="start" x="20" y="-1193.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool _active</text>
<text text-anchor="start" x="20" y="-1182.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _layer</text>
<text text-anchor="start" x="20" y="-1171.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::map&lt; std::string,</text>
<text text-anchor="start" x="20" y="-1160.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::vector&lt; std::shared</text>
<text text-anchor="start" x="20" y="-1149.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt; &gt; &gt; _components</text>
<text text-anchor="start" x="20" y="-1138.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Transform _transform</text>
<text text-anchor="start" x="20" y="-1127.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="20" y="-1116.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; _self</text>
<text text-anchor="start" x="20" y="-1105.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _ownerId</text>
<text text-anchor="start" x="20" y="-1094.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static std::map&lt; std</text>
<text text-anchor="start" x="20" y="-1083.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string, std::shared</text>
<text text-anchor="start" x="20" y="-1072.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; GameObject &gt; &gt; </text>
<text text-anchor="start" x="20" y="-1061.5" font-family="Helvetica,sans-Serif" font-size="10.00">_instances</text>
<polyline fill="none" stroke="black" points="12,-1054.5 188,-1054.5 "/>
<text text-anchor="start" x="20" y="-1042.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="20" y="-1031.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="20" y="-1020.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="20" y="-1009.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name=&quot;Null&quot;)</text>
<text text-anchor="start" x="20" y="-998.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="20" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, const</text>
<text text-anchor="start" x="20" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag)</text>
<text text-anchor="start" x="20" y="-965.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject &amp; operator</text>
<text text-anchor="start" x="20" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const GameObject &amp;other)</text>
<text text-anchor="start" x="20" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="20" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator!=(const</text>
<text text-anchor="start" x="20" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="20" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="20" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator==(const</text>
<text text-anchor="start" x="20" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="20" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="20" y="-866.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetName() const</text>
<text text-anchor="start" x="20" y="-855.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::string</text>
<text text-anchor="start" x="20" y="-844.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void AddComponent(std</text>
<text text-anchor="start" x="20" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Component</text>
<text text-anchor="start" x="20" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; component)</text>
<text text-anchor="start" x="20" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponent()</text>
<text text-anchor="start" x="20" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; std::shared</text>
<text text-anchor="start" x="20" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt;</text>
<text text-anchor="start" x="20" y="-778.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponents</text>
<text text-anchor="start" x="20" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; std::vector</text>
<text text-anchor="start" x="20" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::shared_ptr&lt; Component &gt;&gt;</text>
<text text-anchor="start" x="20" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Active(bool flag)</text>
<text text-anchor="start" x="20" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Active() const</text>
<text text-anchor="start" x="20" y="-723.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; bool</text>
<text text-anchor="start" x="20" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto IsActiveInWorld</text>
<text text-anchor="start" x="20" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; bool</text>
<text text-anchor="start" x="20" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetTransform()</text>
<text text-anchor="start" x="20" y="-679.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; Transform</text>
<text text-anchor="start" x="20" y="-668.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetTransform(const</text>
<text text-anchor="start" x="20" y="-657.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Transform &amp;transform)</text>
<text text-anchor="start" x="20" y="-646.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetOwnerId(int uid)</text>
<text text-anchor="start" x="20" y="-635.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetOwnerId() </text>
<text text-anchor="start" x="20" y="-624.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; int</text>
<text text-anchor="start" x="20" y="-613.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto Find(const</text>
<text text-anchor="start" x="20" y="-602.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;name, bool</text>
<text text-anchor="start" x="20" y="-591.5" font-family="Helvetica,sans-Serif" font-size="10.00"> includeInactive=false)</text>
<text text-anchor="start" x="20" y="-580.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="20" y="-569.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindGameObjects</text>
<text text-anchor="start" x="20" y="-558.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithTag(const std::string</text>
<text text-anchor="start" x="20" y="-547.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;tag) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="20" y="-536.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="20" y="-525.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindWithTag</text>
<text text-anchor="start" x="20" y="-514.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;tag)</text>
<text text-anchor="start" x="20" y="-503.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="20" y="-492.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectOf</text>
<text text-anchor="start" x="20" y="-481.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="20" y="-470.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::shared_ptr</text>
<text text-anchor="start" x="20" y="-459.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; GameObject &gt;</text>
<text text-anchor="start" x="20" y="-448.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectsOf</text>
<text text-anchor="start" x="20" y="-437.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="20" y="-426.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="20" y="-415.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="20" y="-404.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="20" y="-393.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; GameObject</text>
<text text-anchor="start" x="20" y="-382.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; obj)</text>
<text text-anchor="start" x="20" y="-371.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="20" y="-360.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Component *obj)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M100,-343.2C100,-333.91 100,-325.08 100,-316.82"/>
<polygon fill="none" stroke="midnightblue" points="96.5,-343.46 100,-353.46 103.5,-343.46 96.5,-343.46"/>
</g>
</g>
</svg>
