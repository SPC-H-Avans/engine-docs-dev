<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="main" onload="init(evt)" version="1.1" xml:space="preserve"><style type="text/css">.edge:hover path{stroke:red}.edge:hover polygon{stroke:red;fill:red}</style><script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script><defs><circle id="rim" cx="0" cy="0" r="7"/><circle id="rim2" cx="0" cy="0" r="3.5"/><g id="zoomPlus"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="zoomplus.mouseover" end="zoomplus.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M-4,0h8M0,-4v8" pointer-events="none"/></g><g id="zoomMin"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="zoomminus.mouseover" end="zoomminus.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M-4,0h8" pointer-events="none"/></g><g id="dirArrow"><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g><g id="resetDef"><use fill="#404040" xlink:href="#rim2"><set attributeName="fill" begin="reset.mouseover" end="reset.mouseout" to="#808080"/></use></g></defs><script type="text/javascript">var viewWidth = 332; var viewHeight = 1200; var sectionId = &apos;dynsection-0&apos;;</script><script xlink:href="svgpan.js"/><svg id="graph" class="graph"><g id="viewport"><title>spic::GameObject</title><g id="node1" class="node"><title>Node1</title><g id="a_node1"><a xlink:title="Any object which should be represented on screen."><polygon fill="#bfbfbf" stroke="#000" points="70.5 -309.5 70.5 -1191.5 246.5 -1191.5 246.5 -309.5 70.5 -309.5"/><text x="158.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::GameObject</text><polyline fill="none" stroke="#000" points="70.5 -1172.5 246.5 -1172.5"/><text x="78.5" y="-1160.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _name</text><text x="78.5" y="-1149.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _tag</text><text x="78.5" y="-1138.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># bool _active</text><text x="78.5" y="-1127.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _layer</text><text x="78.5" y="-1116.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::map&lt; std::string,</text><text x="78.5" y="-1105.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::vector&lt; std::shared</text><text x="78.5" y="-1094.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt; &gt; &gt; _components</text><text x="78.5" y="-1083.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># Transform _transform</text><text x="78.5" y="-1072.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::weak_ptr&lt; GameObject</text><text x="78.5" y="-1061.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; _self</text><text x="78.5" y="-1050.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _ownerId</text><text x="78.5" y="-1039.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># static std::map&lt; std</text><text x="78.5" y="-1028.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string, std::shared</text><text x="78.5" y="-1017.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; GameObject &gt; &gt;</text><text x="78.5" y="-1006.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_instances</text><polyline fill="none" stroke="#000" points="70.5 -999.5 246.5 -999.5"/><text x="78.5" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="78.5" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text><text x="78.5" y="-965.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="78.5" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name)</text><text x="78.5" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="78.5" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name, const</text><text x="78.5" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag)</text><text x="78.5" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject &amp; operator</text><text x="78.5" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=(const GameObject &amp;other)</text><text x="78.5" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ operator bool()</text><text x="78.5" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator!=(const</text><text x="78.5" y="-866.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="78.5" y="-855.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="78.5" y="-844.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator==(const</text><text x="78.5" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="78.5" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="78.5" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetName() -&gt; std</text><text x="78.5" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string</text><text x="78.5" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void AddComponent(std</text><text x="78.5" y="-778.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; Component</text><text x="78.5" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; component)</text><text x="78.5" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponent()</text><text x="78.5" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const -&gt; std::shared</text><text x="78.5" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt;</text><text x="78.5" y="-723.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponents</text><text x="78.5" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; std::vector</text><text x="78.5" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; std::shared_ptr&lt; Component &gt;&gt;</text><text x="78.5" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Active(bool flag)</text><text x="78.5" y="-679.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto Active() const</text><text x="78.5" y="-668.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="78.5" y="-657.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto IsActiveInWorld</text><text x="78.5" y="-646.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; bool</text><text x="78.5" y="-635.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetTransform()</text><text x="78.5" y="-624.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; Transform</text><text x="78.5" y="-613.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetTransform(const</text><text x="78.5" y="-602.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Transform &amp;transform)</text><text x="78.5" y="-591.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetOwnerId(int uid)</text><text x="78.5" y="-580.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetOwnerId()</text><text x="78.5" y="-569.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; int</text><text x="78.5" y="-558.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto Find(const</text><text x="78.5" y="-547.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;name) -&gt;</text><text x="78.5" y="-536.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::shared_ptr&lt; GameObject &gt;</text><text x="78.5" y="-525.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindGameObjects</text><text x="78.5" y="-514.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">WithTag(const std::string</text><text x="78.5" y="-503.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;tag) -&gt; std::vector&lt; std</text><text x="78.5" y="-492.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="78.5" y="-481.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindWithTag</text><text x="78.5" y="-470.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;tag)</text><text x="78.5" y="-459.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; std::shared_ptr&lt; GameObject &gt;</text><text x="78.5" y="-448.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectOf</text><text x="78.5" y="-437.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="78.5" y="-426.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::shared_ptr</text><text x="78.5" y="-415.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; GameObject &gt;</text><text x="78.5" y="-404.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectsOf</text><text x="78.5" y="-393.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="78.5" y="-382.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::vector&lt; std</text><text x="78.5" y="-371.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="78.5" y="-360.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="78.5" y="-349.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(std::shared_ptr&lt; GameObject</text><text x="78.5" y="-338.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; obj)</text><text x="78.5" y="-327.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="78.5" y="-316.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(Component *obj)</text></a></g></g><g id="node2" class="node"><title>Node2</title><g id="a_node2"><a target="_top" xlink:href="classspic_1_1Camera.html" xlink:title="Class representing a point of view towards the game scene. @spicapi."><polygon fill="none" stroke="#000" points="0 -116.5 0 -272.5 161 -272.5 161 -116.5 0 -116.5"/><text x="80.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Camera</text><polyline fill="none" stroke="#000" points="0 -253.5 161 -253.5"/><polyline fill="none" stroke="#000" points="0 -234.5 161 -234.5"/><text x="8" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ Camera(const std::</text><text x="8" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">string &amp;name, const</text><text x="8" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag, spic</text><text x="8" y="-189.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::Color backgroundColor,</text><text x="8" y="-178.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">double aspectWidth, double</text><text x="8" y="-167.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">aspectHeight)</text><text x="8" y="-156.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Zoom(double aspectWidth,</text><text x="8" y="-145.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">double aspectHeight)</text><text x="8" y="-134.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double GetAspectWidth()</text><text x="8" y="-123.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double GetAspectHeight()</text></a></g></g><g id="edge1" class="edge"><title>Node1-&gt;Node2</title><path fill="none" stroke="#191970" d="M95.12,-299.36C93.8,-289.99 92.55,-281.05 91.36,-272.65"/><polygon fill="none" stroke="#191970" points="91.66 -299.87 96.52 -309.28 98.59 -298.89 91.66 -299.87"/></g><g id="node3" class="node"><title>Node3</title><g id="a_node3"><a target="_top" xlink:href="classspic_1_1UIObject.html" xlink:title="Base class for a user interface object like Button or Text. @spicapi."><polygon fill="none" stroke="#000" points="179 -149.5 179 -239.5 296 -239.5 296 -149.5 179 -149.5"/><text x="237.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::UIObject</text><polyline fill="none" stroke="#000" points="179 -220.5 296 -220.5"/><polyline fill="none" stroke="#000" points="179 -201.5 296 -201.5"/><text x="187" y="-189.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ UIObject(const std</text><text x="187" y="-178.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name, const</text><text x="187" y="-167.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag, double</text><text x="187" y="-156.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">width, double height)</text></a></g></g><g id="edge2" class="edge"><title>Node1-&gt;Node3</title><path fill="none" stroke="#191970" d="M222.7,-299.28C225.98,-276.3 228.88,-255.98 231.22,-239.54"/><polygon fill="none" stroke="#191970" points="219.22 -298.89 221.27 -309.28 226.15 -299.88 219.22 -298.89"/></g><g id="node4" class="node"><title>Node4</title><g id="a_node4"><a target="_top" xlink:href="classspic_1_1Button.html" xlink:title="Instances of this class are clickable user interface items."><polygon fill="none" stroke="#000" points="112 -.5 112 -79.5 247 -79.5 247 -.5 112 -.5"/><text x="179.5" y="-67.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Button</text><polyline fill="none" stroke="#000" points="112 -60.5 247 -60.5"/><polyline fill="none" stroke="#000" points="112 -41.5 247 -41.5"/><text x="120" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Click()</text><text x="120" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnClick(std::function</text><text x="120" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; void()&gt; callback)</text></a></g></g><g id="edge3" class="edge"><title>Node3-&gt;Node4</title><path fill="none" stroke="#191970" d="M217.09,-139.84C209.53,-119.97 201.12,-97.84 194.17,-79.57"/><polygon fill="none" stroke="#191970" points="213.9 -141.29 220.72 -149.39 220.44 -138.8 213.9 -141.29"/></g><g id="node5" class="node"><title>Node5</title><g id="a_node5"><a target="_top" xlink:href="classspic_1_1Text.html" xlink:title="Class representing a piece of text which can be rendered. @spicapi."><polygon fill="none" stroke="#000" points="265.5 -11.5 265.5 -68.5 323.5 -68.5 323.5 -11.5 265.5 -11.5"/><text x="294.5" y="-56.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Text</text><polyline fill="none" stroke="#000" points="265.5 -49.5 323.5 -49.5"/><polyline fill="none" stroke="#000" points="265.5 -30.5 323.5 -30.5"/></a></g></g><g id="edge4" class="edge"><title>Node3-&gt;Node5</title><path fill="none" stroke="#191970" d="M257.49,-140.01C266.49,-115.95 276.72,-88.56 284.15,-68.69"/><polygon fill="none" stroke="#191970" points="254.21 -138.8 253.99 -149.39 260.77 -141.25 254.21 -138.8"/></g></g></svg><g id="navigator" fill="#404254" transform="translate(0 0)"><rect width="60" height="60" x="0" y="0" fill="#f2f5e9" fill-opacity=".5" stroke="#606060" stroke-width=".5"/><use id="zoomplus" x="17" y="9" onmousedown="handleZoom(evt,'in')" xlink:href="#zoomPlus"/><use id="zoomminus" x="42" y="9" onmousedown="handleZoom(evt,'out')" xlink:href="#zoomMin"/><use id="reset" x="30" y="36" onmousedown="handleReset()" xlink:href="#resetDef"/><g id="arrowUp" onmousedown="handlePan(0,-1)" transform="translate(30 24)" xlink:href="#dirArrow"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="arrowUp.mouseover" end="arrowUp.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g><g id="arrowRight" onmousedown="handlePan(1,0)" transform="rotate(90) translate(36 -43)" xlink:href="#dirArrow"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="arrowRight.mouseover" end="arrowRight.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g><g id="arrowDown" onmousedown="handlePan(0,1)" transform="rotate(180) translate(-30 -48)" xlink:href="#dirArrow"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="arrowDown.mouseover" end="arrowDown.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g><g id="arrowLeft" onmousedown="handlePan(-1,0)" transform="rotate(270) translate(-36 17)" xlink:href="#dirArrow"><use fill="#404040" xlink:href="#rim"><set attributeName="fill" begin="arrowLeft.mouseover" end="arrowLeft.mouseout" to="#808080"/></use><path fill="none" stroke="#fff" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/></g></g><svg width="100%" height="30" preserveAspectRatio="xMaxYMin meet" viewBox="0 0 15 15"><g id="arrow_out" transform="scale(0.3 0.3)"><a target="_base" xlink:href="classspic_1_1GameObject__inherit__graph_org.svg"><rect id="button" width="38" height="38" x="6" y="6" fill="#f2f5e9" fill-opacity=".5" stroke="#606060" stroke-width="1" rx="5" ry="5"/><path id="arrow" d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z" style="fill:#404040"/></a></g></svg></svg>