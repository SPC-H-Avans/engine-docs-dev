<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 ()
 -->
<!-- Title: spic::Camera Pages: 1 -->
<svg width="184pt" height="1328pt"
 viewBox="0.00 0.00 184.00 1328.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1324)">
<title>spic::Camera</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Class representing a point of view towards the game scene. @spicapi.">
<polygon fill="#bfbfbf" stroke="black" points="7.5,-0.5 7.5,-156.5 168.5,-156.5 168.5,-0.5 7.5,-0.5"/>
<text text-anchor="middle" x="88" y="-144.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Camera</text>
<polyline fill="none" stroke="black" points="7.5,-137.5 168.5,-137.5 "/>
<text text-anchor="middle" x="88" y="-125.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="7.5,-118.5 168.5,-118.5 "/>
<text text-anchor="start" x="15.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Camera(const std::</text>
<text text-anchor="start" x="15.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">string &amp;name, const</text>
<text text-anchor="start" x="15.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag, spic</text>
<text text-anchor="start" x="15.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Color backgroundColor,</text>
<text text-anchor="start" x="15.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double aspectWidth, double</text>
<text text-anchor="start" x="15.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00"> aspectHeight)</text>
<text text-anchor="start" x="15.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Zoom(double aspectWidth,</text>
<text text-anchor="start" x="15.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double aspectHeight)</text>
<text text-anchor="start" x="15.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double GetAspectWidth()</text>
<text text-anchor="start" x="15.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double GetAspectHeight()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classspic_1_1GameObject.html" target="_top" xlink:title="Any object which should be represented on screen.">
<polygon fill="none" stroke="black" points="0,-194.5 0,-1065.5 176,-1065.5 176,-194.5 0,-194.5"/>
<text text-anchor="middle" x="88" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::GameObject</text>
<polyline fill="none" stroke="black" points="0,-1046.5 176,-1046.5 "/>
<text text-anchor="start" x="8" y="-1034.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _name</text>
<text text-anchor="start" x="8" y="-1023.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _tag</text>
<text text-anchor="start" x="8" y="-1012.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool _active</text>
<text text-anchor="start" x="8" y="-1001.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _layer</text>
<text text-anchor="start" x="8" y="-990.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::map&lt; std::string,</text>
<text text-anchor="start" x="8" y="-979.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::vector&lt; std::shared</text>
<text text-anchor="start" x="8" y="-968.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt; &gt; &gt; _components</text>
<text text-anchor="start" x="8" y="-957.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-946.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; _self</text>
<text text-anchor="start" x="8" y="-935.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _ownerId</text>
<text text-anchor="start" x="8" y="-924.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static std::map&lt; std</text>
<text text-anchor="start" x="8" y="-913.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string, std::shared</text>
<text text-anchor="start" x="8" y="-902.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; GameObject &gt; &gt; </text>
<text text-anchor="start" x="8" y="-891.5" font-family="Helvetica,sans-Serif" font-size="10.00">_instances</text>
<polyline fill="none" stroke="black" points="0,-884.5 176,-884.5 "/>
<text text-anchor="start" x="8" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="8" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="8" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name)</text>
<text text-anchor="start" x="8" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, const</text>
<text text-anchor="start" x="8" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject &amp; operator</text>
<text text-anchor="start" x="8" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const GameObject &amp;other)</text>
<text text-anchor="start" x="8" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="8" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator!=(const</text>
<text text-anchor="start" x="8" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator==(const</text>
<text text-anchor="start" x="8" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetName() const</text>
<text text-anchor="start" x="8" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::string</text>
<text text-anchor="start" x="8" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void AddComponent(std</text>
<text text-anchor="start" x="8" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Component</text>
<text text-anchor="start" x="8" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; component)</text>
<text text-anchor="start" x="8" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponent()</text>
<text text-anchor="start" x="8" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; std::shared</text>
<text text-anchor="start" x="8" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt;</text>
<text text-anchor="start" x="8" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponents</text>
<text text-anchor="start" x="8" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; std::vector</text>
<text text-anchor="start" x="8" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::shared_ptr&lt; Component &gt;&gt;</text>
<text text-anchor="start" x="8" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Active(bool flag)</text>
<text text-anchor="start" x="8" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Active() const</text>
<text text-anchor="start" x="8" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto IsActiveInWorld</text>
<text text-anchor="start" x="8" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetTransform()</text>
<text text-anchor="start" x="8" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; Transform</text>
<text text-anchor="start" x="8" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetTransform(const</text>
<text text-anchor="start" x="8" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Transform &amp;transform)</text>
<text text-anchor="start" x="8" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetOwnerId(int uid)</text>
<text text-anchor="start" x="8" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetOwnerId() </text>
<text text-anchor="start" x="8" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; int</text>
<text text-anchor="start" x="8" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto Find(const</text>
<text text-anchor="start" x="8" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;name) &#45;&gt;</text>
<text text-anchor="start" x="8" y="-421.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindGameObjects</text>
<text text-anchor="start" x="8" y="-399.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithTag(const std::string</text>
<text text-anchor="start" x="8" y="-388.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;tag) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-377.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-366.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindWithTag</text>
<text text-anchor="start" x="8" y="-355.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectOf</text>
<text text-anchor="start" x="8" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::shared_ptr</text>
<text text-anchor="start" x="8" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectsOf</text>
<text text-anchor="start" x="8" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-267.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-256.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="8" y="-234.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-223.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; obj)</text>
<text text-anchor="start" x="8" y="-212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="8" y="-201.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Component *obj)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M88,-184.16C88,-174.53 88,-165.36 88,-156.74"/>
<polygon fill="none" stroke="midnightblue" points="84.5,-184.36 88,-194.36 91.5,-184.36 84.5,-184.36"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="structspic_1_1Transform.html" target="_top" xlink:title="Instances of this class represent specific 2D transformations. @spicapi.">
<polygon fill="none" stroke="black" points="30.5,-1113.5 30.5,-1192.5 145.5,-1192.5 145.5,-1113.5 30.5,-1113.5"/>
<text text-anchor="middle" x="88" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Transform</text>
<polyline fill="none" stroke="black" points="30.5,-1173.5 145.5,-1173.5 "/>
<text text-anchor="start" x="38.5" y="-1161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double rotation</text>
<text text-anchor="start" x="38.5" y="-1150.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double scale</text>
<polyline fill="none" stroke="black" points="30.5,-1143.5 145.5,-1143.5 "/>
<text text-anchor="start" x="38.5" y="-1131.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="38.5" y="-1120.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M88,-1113.27C88,-1103.05 88,-1091.11 88,-1077.82"/>
<polygon fill="none" stroke="#404040" points="88,-1077.79 84,-1071.79 88,-1065.79 92,-1071.79 88,-1077.79"/>
<text text-anchor="middle" x="115.5" y="-1087" font-family="Helvetica,sans-Serif" font-size="10.00"> #_transform</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="structspic_1_1Point.html" target="_top" xlink:title="Struct representing both a 2D point and a 2D vector. @spicapi.">
<polygon fill="none" stroke="black" points="30.5,-1240.5 30.5,-1319.5 145.5,-1319.5 145.5,-1240.5 30.5,-1240.5"/>
<text text-anchor="middle" x="88" y="-1307.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Point</text>
<polyline fill="none" stroke="black" points="30.5,-1300.5 145.5,-1300.5 "/>
<text text-anchor="start" x="38.5" y="-1288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double x</text>
<text text-anchor="start" x="38.5" y="-1277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double y</text>
<polyline fill="none" stroke="black" points="30.5,-1270.5 145.5,-1270.5 "/>
<text text-anchor="start" x="38.5" y="-1258.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="38.5" y="-1247.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M88,-1240.48C88,-1229.19 88,-1216.67 88,-1204.75"/>
<polygon fill="none" stroke="#404040" points="88,-1204.61 84,-1198.61 88,-1192.61 92,-1198.61 88,-1204.61"/>
<text text-anchor="middle" x="109.5" y="-1214" font-family="Helvetica,sans-Serif" font-size="10.00"> +position</text>
</g>
</g>
</svg>
