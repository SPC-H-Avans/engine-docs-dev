<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 ()
 -->
<!-- Title: spic::Camera Pages: 1 -->
<svg width="195pt" height="1625pt"
 viewBox="0.00 0.00 195.00 1625.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1621)">
<title>spic::Camera</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Class representing a point of view towards the game scene. @spicapi.">
<polygon fill="#bfbfbf" stroke="black" points="13,-0.5 13,-255.5 174,-255.5 174,-0.5 13,-0.5"/>
<text text-anchor="middle" x="93.5" y="-243.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Camera</text>
<polyline fill="none" stroke="black" points="13,-236.5 174,-236.5 "/>
<text text-anchor="middle" x="93.5" y="-224.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="13,-217.5 174,-217.5 "/>
<text text-anchor="start" x="21" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(Archive</text>
<text text-anchor="start" x="21" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, unsigned int version)</text>
<text text-anchor="start" x="21" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Camera(const std::</text>
<text text-anchor="start" x="21" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">string &amp;name=&quot;Null&quot;)</text>
<text text-anchor="start" x="21" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Camera(const std::</text>
<text text-anchor="start" x="21" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">string &amp;name, const</text>
<text text-anchor="start" x="21" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag, spic</text>
<text text-anchor="start" x="21" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Color backgroundColor,</text>
<text text-anchor="start" x="21" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double aspectWidth, double</text>
<text text-anchor="start" x="21" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> aspectHeight)</text>
<text text-anchor="start" x="21" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Zoom(double aspectWidth,</text>
<text text-anchor="start" x="21" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double aspectHeight)</text>
<text text-anchor="start" x="21" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double GetAspectWidth()</text>
<text text-anchor="start" x="21" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double GetAspectHeight()</text>
<text text-anchor="start" x="21" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetTarget(const</text>
<text text-anchor="start" x="21" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;target)</text>
<text text-anchor="start" x="21" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Transform GetTarget</text>
<text text-anchor="start" x="21" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int screenWidth, int</text>
<text text-anchor="start" x="21" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> screenHeight)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classspic_1_1GameObject.html" target="_top" xlink:title="Any object which should be represented on screen.">
<polygon fill="none" stroke="black" points="0,-293.5 0,-1340.5 187,-1340.5 187,-293.5 0,-293.5"/>
<text text-anchor="middle" x="93.5" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::GameObject</text>
<polyline fill="none" stroke="black" points="0,-1321.5 187,-1321.5 "/>
<text text-anchor="start" x="8" y="-1309.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _name</text>
<text text-anchor="start" x="8" y="-1298.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _tag</text>
<text text-anchor="start" x="8" y="-1287.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool _active</text>
<text text-anchor="start" x="8" y="-1276.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _layer</text>
<text text-anchor="start" x="8" y="-1265.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::map&lt; std::string,</text>
<text text-anchor="start" x="8" y="-1254.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::vector&lt; std::shared</text>
<text text-anchor="start" x="8" y="-1243.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt; &gt; &gt; _components</text>
<text text-anchor="start" x="8" y="-1232.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-1221.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; _self</text>
<text text-anchor="start" x="8" y="-1210.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _ownerId</text>
<text text-anchor="start" x="8" y="-1199.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static std::map&lt; std</text>
<text text-anchor="start" x="8" y="-1188.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string, std::shared</text>
<text text-anchor="start" x="8" y="-1177.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; GameObject &gt; &gt; </text>
<text text-anchor="start" x="8" y="-1166.5" font-family="Helvetica,sans-Serif" font-size="10.00">_instances</text>
<polyline fill="none" stroke="black" points="0,-1159.5 187,-1159.5 "/>
<text text-anchor="start" x="8" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="8" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="8" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void ResetSelf()</text>
<text text-anchor="start" x="8" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void FixComponents()</text>
<text text-anchor="start" x="8" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void FixGameObjectAfterDeserialize()</text>
<text text-anchor="start" x="8" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name=&quot;Null&quot;)</text>
<text text-anchor="start" x="8" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, const</text>
<text text-anchor="start" x="8" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const GameObject</text>
<text text-anchor="start" x="8" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;other)=default</text>
<text text-anchor="start" x="8" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator=(const</text>
<text text-anchor="start" x="8" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; GameObject &amp;</text>
<text text-anchor="start" x="8" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(GameObject</text>
<text text-anchor="start" x="8" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;other)=default</text>
<text text-anchor="start" x="8" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator=(GameObject</text>
<text text-anchor="start" x="8" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;other) &#45;&gt; GameObject</text>
<text text-anchor="start" x="8" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;=default</text>
<text text-anchor="start" x="8" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~GameObject</text>
<text text-anchor="start" x="8" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">()=default</text>
<text text-anchor="start" x="8" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="8" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator!=(const</text>
<text text-anchor="start" x="8" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator==(const</text>
<text text-anchor="start" x="8" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetName() const</text>
<text text-anchor="start" x="8" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::string</text>
<text text-anchor="start" x="8" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetTag() const</text>
<text text-anchor="start" x="8" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::string</text>
<text text-anchor="start" x="8" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void AddComponent(std</text>
<text text-anchor="start" x="8" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Component</text>
<text text-anchor="start" x="8" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; component)</text>
<text text-anchor="start" x="8" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponent()</text>
<text text-anchor="start" x="8" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; std::shared</text>
<text text-anchor="start" x="8" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt;</text>
<text text-anchor="start" x="8" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponents</text>
<text text-anchor="start" x="8" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; std::vector</text>
<text text-anchor="start" x="8" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::shared_ptr&lt; Component &gt;&gt;</text>
<text text-anchor="start" x="8" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Active(bool flag)</text>
<text text-anchor="start" x="8" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Active() const</text>
<text text-anchor="start" x="8" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto IsActiveInWorld</text>
<text text-anchor="start" x="8" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetTransform()</text>
<text text-anchor="start" x="8" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; Transform</text>
<text text-anchor="start" x="8" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetTransform(const</text>
<text text-anchor="start" x="8" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Transform &amp;transform)</text>
<text text-anchor="start" x="8" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetOwnerId(int uid)</text>
<text text-anchor="start" x="8" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetOwnerId() </text>
<text text-anchor="start" x="8" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; int</text>
<text text-anchor="start" x="8" y="-553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto Find(const</text>
<text text-anchor="start" x="8" y="-542.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;name, bool</text>
<text text-anchor="start" x="8" y="-531.5" font-family="Helvetica,sans-Serif" font-size="10.00"> includeInactive=false)</text>
<text text-anchor="start" x="8" y="-520.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindGameObjects</text>
<text text-anchor="start" x="8" y="-498.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithTag(const std::string</text>
<text text-anchor="start" x="8" y="-487.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;tag) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-476.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindWithTag</text>
<text text-anchor="start" x="8" y="-454.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-443.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-432.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectOf</text>
<text text-anchor="start" x="8" y="-421.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-410.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::shared_ptr</text>
<text text-anchor="start" x="8" y="-399.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-388.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectsOf</text>
<text text-anchor="start" x="8" y="-377.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-366.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-355.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="8" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; obj)</text>
<text text-anchor="start" x="8" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="8" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Component *obj)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M93.5,-282.83C93.5,-273.45 93.5,-264.34 93.5,-255.55"/>
<polygon fill="none" stroke="midnightblue" points="90,-283.12 93.5,-293.12 97,-283.12 90,-283.12"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="structspic_1_1Transform.html" target="_top" xlink:title="Instances of this class represent specific 2D transformations. @spicapi.">
<polygon fill="none" stroke="black" points="36,-1388.5 36,-1467.5 151,-1467.5 151,-1388.5 36,-1388.5"/>
<text text-anchor="middle" x="93.5" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Transform</text>
<polyline fill="none" stroke="black" points="36,-1448.5 151,-1448.5 "/>
<text text-anchor="start" x="44" y="-1436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double rotation</text>
<text text-anchor="start" x="44" y="-1425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double scale</text>
<polyline fill="none" stroke="black" points="36,-1418.5 151,-1418.5 "/>
<text text-anchor="start" x="44" y="-1406.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="44" y="-1395.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M93.5,-1388.44C93.5,-1378.23 93.5,-1366.26 93.5,-1352.85"/>
<polygon fill="none" stroke="#404040" points="93.5,-1352.71 89.5,-1346.71 93.5,-1340.71 97.5,-1346.71 93.5,-1352.71"/>
<text text-anchor="middle" x="121" y="-1362" font-family="Helvetica,sans-Serif" font-size="10.00"> #_transform</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="structspic_1_1Point.html" target="_top" xlink:title="Struct representing both a 2D point and a 2D vector. @spicapi.">
<polygon fill="none" stroke="black" points="35.5,-1515.5 35.5,-1616.5 151.5,-1616.5 151.5,-1515.5 35.5,-1515.5"/>
<text text-anchor="middle" x="93.5" y="-1604.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Point</text>
<polyline fill="none" stroke="black" points="35.5,-1597.5 151.5,-1597.5 "/>
<text text-anchor="start" x="43.5" y="-1585.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double x</text>
<text text-anchor="start" x="43.5" y="-1574.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double y</text>
<polyline fill="none" stroke="black" points="35.5,-1567.5 151.5,-1567.5 "/>
<text text-anchor="start" x="43.5" y="-1555.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="43.5" y="-1544.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="43.5" y="-1533.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator*(double</text>
<text text-anchor="start" x="43.5" y="-1522.5" font-family="Helvetica,sans-Serif" font-size="10.00"> multiplier) &#45;&gt; Point</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M93.5,-1515.13C93.5,-1503.66 93.5,-1491.45 93.5,-1479.94"/>
<polygon fill="none" stroke="#404040" points="93.5,-1479.79 89.5,-1473.79 93.5,-1467.79 97.5,-1473.79 93.5,-1479.79"/>
<text text-anchor="middle" x="115" y="-1489" font-family="Helvetica,sans-Serif" font-size="10.00"> +position</text>
</g>
</g>
</svg>
