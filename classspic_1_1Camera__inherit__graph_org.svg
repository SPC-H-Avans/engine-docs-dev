<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="184pt" height="1084pt" viewBox="0 0 184 1084"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1080)"><title>spic::Camera</title><g id="node1" class="node"><title>Node1</title><g id="a_node1"><a xlink:title="Class representing a point of view towards the game scene. @spicapi."><polygon fill="#bfbfbf" stroke="#000" points="7.5 -.5 7.5 -156.5 168.5 -156.5 168.5 -.5 7.5 -.5"/><text x="88" y="-144.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Camera</text><polyline fill="none" stroke="#000" points="7.5 -137.5 168.5 -137.5"/><polyline fill="none" stroke="#000" points="7.5 -118.5 168.5 -118.5"/><text x="15.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ Camera(const std::</text><text x="15.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">string &amp;name, const</text><text x="15.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag, spic</text><text x="15.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::Color backgroundColor,</text><text x="15.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">double aspectWidth, double</text><text x="15.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">aspectHeight)</text><text x="15.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Zoom(double aspectWidth,</text><text x="15.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">double aspectHeight)</text><text x="15.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double GetAspectWidth()</text><text x="15.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double GetAspectHeight()</text></a></g></g><g id="node2" class="node"><title>Node2</title><g id="a_node2"><a target="_top" xlink:href="classspic_1_1GameObject.html" xlink:title="Any object which should be represented on screen."><polygon fill="none" stroke="#000" points="0 -193.5 0 -1075.5 176 -1075.5 176 -193.5 0 -193.5"/><text x="88" y="-1063.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::GameObject</text><polyline fill="none" stroke="#000" points="0 -1056.5 176 -1056.5"/><text x="8" y="-1044.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _name</text><text x="8" y="-1033.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _tag</text><text x="8" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># bool _active</text><text x="8" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _layer</text><text x="8" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::map&lt; std::string,</text><text x="8" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::vector&lt; std::shared</text><text x="8" y="-978.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt; &gt; &gt; _components</text><text x="8" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># Transform _transform</text><text x="8" y="-956.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::weak_ptr&lt; GameObject</text><text x="8" y="-945.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; _self</text><text x="8" y="-934.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _ownerId</text><text x="8" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># static std::map&lt; std</text><text x="8" y="-912.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string, std::shared</text><text x="8" y="-901.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; GameObject &gt; &gt;</text><text x="8" y="-890.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_instances</text><polyline fill="none" stroke="#000" points="0 -883.5 176 -883.5"/><text x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text><text x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name)</text><text x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name, const</text><text x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag)</text><text x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject &amp; operator</text><text x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=(const GameObject &amp;other)</text><text x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ operator bool()</text><text x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator!=(const</text><text x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator==(const</text><text x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetName() -&gt; std</text><text x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string</text><text x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void AddComponent(std</text><text x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; Component</text><text x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; component)</text><text x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponent()</text><text x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const -&gt; std::shared</text><text x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt;</text><text x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponents</text><text x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; std::vector</text><text x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; std::shared_ptr&lt; Component &gt;&gt;</text><text x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Active(bool flag)</text><text x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto Active() const</text><text x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto IsActiveInWorld</text><text x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; bool</text><text x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetTransform()</text><text x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; Transform</text><text x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetTransform(const</text><text x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Transform &amp;transform)</text><text x="8" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetOwnerId(int uid)</text><text x="8" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetOwnerId()</text><text x="8" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; int</text><text x="8" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto Find(const</text><text x="8" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;name) -&gt;</text><text x="8" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::shared_ptr&lt; GameObject &gt;</text><text x="8" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindGameObjects</text><text x="8" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">WithTag(const std::string</text><text x="8" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;tag) -&gt; std::vector&lt; std</text><text x="8" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindWithTag</text><text x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;tag)</text><text x="8" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; std::shared_ptr&lt; GameObject &gt;</text><text x="8" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectOf</text><text x="8" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="8" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::shared_ptr</text><text x="8" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; GameObject &gt;</text><text x="8" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectsOf</text><text x="8" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="8" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::vector&lt; std</text><text x="8" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="8" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(std::shared_ptr&lt; GameObject</text><text x="8" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; obj)</text><text x="8" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(Component *obj)</text></a></g></g><g id="edge1" class="edge"><title>Node2-&gt;Node1</title><path fill="none" stroke="#191970" d="M88,-183.06C88,-173.8 88,-164.97 88,-156.65"/><polygon fill="none" stroke="#191970" points="84.5 -183.28 88 -193.28 91.5 -183.28 84.5 -183.28"/></g></g></svg>