<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 ()
 -->
<!-- Title: spic::GameObject Pages: 1 -->
<svg width="442pt" height="1387pt"
 viewBox="0.00 0.00 441.50 1387.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1383)">
<title>spic::GameObject</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Any object which should be represented on screen.">
<polygon fill="#bfbfbf" stroke="black" points="72.5,-485.5 72.5,-1378.5 248.5,-1378.5 248.5,-485.5 72.5,-485.5"/>
<text text-anchor="middle" x="160.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::GameObject</text>
<polyline fill="none" stroke="black" points="72.5,-1359.5 248.5,-1359.5 "/>
<text text-anchor="start" x="80.5" y="-1347.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _name</text>
<text text-anchor="start" x="80.5" y="-1336.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _tag</text>
<text text-anchor="start" x="80.5" y="-1325.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool _active</text>
<text text-anchor="start" x="80.5" y="-1314.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _layer</text>
<text text-anchor="start" x="80.5" y="-1303.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::map&lt; std::string,</text>
<text text-anchor="start" x="80.5" y="-1292.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::vector&lt; std::shared</text>
<text text-anchor="start" x="80.5" y="-1281.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt; &gt; &gt; _components</text>
<text text-anchor="start" x="80.5" y="-1270.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Transform _transform</text>
<text text-anchor="start" x="80.5" y="-1259.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="80.5" y="-1248.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; _self</text>
<text text-anchor="start" x="80.5" y="-1237.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _ownerId</text>
<text text-anchor="start" x="80.5" y="-1226.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static std::map&lt; std</text>
<text text-anchor="start" x="80.5" y="-1215.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string, std::shared</text>
<text text-anchor="start" x="80.5" y="-1204.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; GameObject &gt; &gt; </text>
<text text-anchor="start" x="80.5" y="-1193.5" font-family="Helvetica,sans-Serif" font-size="10.00">_instances</text>
<polyline fill="none" stroke="black" points="72.5,-1186.5 248.5,-1186.5 "/>
<text text-anchor="start" x="80.5" y="-1174.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="80.5" y="-1163.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="80.5" y="-1152.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="80.5" y="-1141.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name=&quot;Null&quot;)</text>
<text text-anchor="start" x="80.5" y="-1130.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="80.5" y="-1119.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, const</text>
<text text-anchor="start" x="80.5" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag)</text>
<text text-anchor="start" x="80.5" y="-1097.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject &amp; operator</text>
<text text-anchor="start" x="80.5" y="-1086.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const GameObject &amp;other)</text>
<text text-anchor="start" x="80.5" y="-1075.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="80.5" y="-1064.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator!=(const</text>
<text text-anchor="start" x="80.5" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="80.5" y="-1042.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="80.5" y="-1031.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator==(const</text>
<text text-anchor="start" x="80.5" y="-1020.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="80.5" y="-1009.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="80.5" y="-998.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetName() const</text>
<text text-anchor="start" x="80.5" y="-987.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::string</text>
<text text-anchor="start" x="80.5" y="-976.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void AddComponent(std</text>
<text text-anchor="start" x="80.5" y="-965.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Component</text>
<text text-anchor="start" x="80.5" y="-954.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; component)</text>
<text text-anchor="start" x="80.5" y="-943.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponent()</text>
<text text-anchor="start" x="80.5" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; std::shared</text>
<text text-anchor="start" x="80.5" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt;</text>
<text text-anchor="start" x="80.5" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponents</text>
<text text-anchor="start" x="80.5" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; std::vector</text>
<text text-anchor="start" x="80.5" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::shared_ptr&lt; Component &gt;&gt;</text>
<text text-anchor="start" x="80.5" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Active(bool flag)</text>
<text text-anchor="start" x="80.5" y="-866.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Active() const</text>
<text text-anchor="start" x="80.5" y="-855.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; bool</text>
<text text-anchor="start" x="80.5" y="-844.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto IsActiveInWorld</text>
<text text-anchor="start" x="80.5" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; bool</text>
<text text-anchor="start" x="80.5" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetTransform()</text>
<text text-anchor="start" x="80.5" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; Transform</text>
<text text-anchor="start" x="80.5" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetTransform(const</text>
<text text-anchor="start" x="80.5" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Transform &amp;transform)</text>
<text text-anchor="start" x="80.5" y="-778.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetOwnerId(int uid)</text>
<text text-anchor="start" x="80.5" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetOwnerId() </text>
<text text-anchor="start" x="80.5" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; int</text>
<text text-anchor="start" x="80.5" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto Find(const</text>
<text text-anchor="start" x="80.5" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;name, bool</text>
<text text-anchor="start" x="80.5" y="-723.5" font-family="Helvetica,sans-Serif" font-size="10.00"> includeInactive=false)</text>
<text text-anchor="start" x="80.5" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="80.5" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindGameObjects</text>
<text text-anchor="start" x="80.5" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithTag(const std::string</text>
<text text-anchor="start" x="80.5" y="-679.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;tag) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="80.5" y="-668.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="80.5" y="-657.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindWithTag</text>
<text text-anchor="start" x="80.5" y="-646.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;tag)</text>
<text text-anchor="start" x="80.5" y="-635.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="80.5" y="-624.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectOf</text>
<text text-anchor="start" x="80.5" y="-613.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="80.5" y="-602.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::shared_ptr</text>
<text text-anchor="start" x="80.5" y="-591.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; GameObject &gt;</text>
<text text-anchor="start" x="80.5" y="-580.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectsOf</text>
<text text-anchor="start" x="80.5" y="-569.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="80.5" y="-558.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="80.5" y="-547.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="80.5" y="-536.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="80.5" y="-525.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; GameObject</text>
<text text-anchor="start" x="80.5" y="-514.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; obj)</text>
<text text-anchor="start" x="80.5" y="-503.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="80.5" y="-492.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Component *obj)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classspic_1_1Camera.html" target="_top" xlink:title="Class representing a point of view towards the game scene. @spicapi.">
<polygon fill="none" stroke="black" points="0,-215.5 0,-448.5 161,-448.5 161,-215.5 0,-215.5"/>
<text text-anchor="middle" x="80.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Camera</text>
<polyline fill="none" stroke="black" points="0,-429.5 161,-429.5 "/>
<text text-anchor="middle" x="80.5" y="-417.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-410.5 161,-410.5 "/>
<text text-anchor="start" x="8" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Camera(const std::</text>
<text text-anchor="start" x="8" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">string &amp;name=&quot;Null&quot;)</text>
<text text-anchor="start" x="8" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Camera(const std::</text>
<text text-anchor="start" x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">string &amp;name, const</text>
<text text-anchor="start" x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag, spic</text>
<text text-anchor="start" x="8" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Color backgroundColor,</text>
<text text-anchor="start" x="8" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double aspectWidth, double</text>
<text text-anchor="start" x="8" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00"> aspectHeight)</text>
<text text-anchor="start" x="8" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Zoom(double aspectWidth,</text>
<text text-anchor="start" x="8" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double aspectHeight)</text>
<text text-anchor="start" x="8" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double GetAspectWidth()</text>
<text text-anchor="start" x="8" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double GetAspectHeight()</text>
<text text-anchor="start" x="8" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetTarget(const</text>
<text text-anchor="start" x="8" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;target)</text>
<text text-anchor="start" x="8" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Transform GetTarget</text>
<text text-anchor="start" x="8" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int screenWidth, int</text>
<text text-anchor="start" x="8" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00"> screenHeight)</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge">
<title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M99.54,-475.36C98.31,-466.16 97.12,-457.24 95.97,-448.65"/>
<polygon fill="none" stroke="midnightblue" points="96.1,-476 100.89,-485.45 103.04,-475.07 96.1,-476"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classspic_1_1UIObject.html" target="_top" xlink:title="Base class for a user interface object like Button or Text. @spicapi.">
<polygon fill="none" stroke="black" points="179.5,-259.5 179.5,-404.5 301.5,-404.5 301.5,-259.5 179.5,-259.5"/>
<text text-anchor="middle" x="240.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::UIObject</text>
<polyline fill="none" stroke="black" points="179.5,-385.5 301.5,-385.5 "/>
<text text-anchor="start" x="187.5" y="-373.5" font-family="Helvetica,sans-Serif" font-size="10.00"># double _width</text>
<text text-anchor="start" x="187.5" y="-362.5" font-family="Helvetica,sans-Serif" font-size="10.00"># double _height</text>
<polyline fill="none" stroke="black" points="179.5,-355.5 301.5,-355.5 "/>
<text text-anchor="start" x="187.5" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UIObject(const std</text>
<text text-anchor="start" x="187.5" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, double</text>
<text text-anchor="start" x="187.5" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00"> width, double height)</text>
<text text-anchor="start" x="187.5" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void Render()=0</text>
<text text-anchor="start" x="187.5" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetWidth() &#45;&gt;</text>
<text text-anchor="start" x="187.5" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double</text>
<text text-anchor="start" x="187.5" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetHeight() &#45;&gt;</text>
<text text-anchor="start" x="187.5" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node1&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M221.46,-475.3C224.97,-449.09 228.18,-425.12 230.92,-404.63"/>
<polygon fill="none" stroke="midnightblue" points="217.96,-475.07 220.11,-485.45 224.9,-476 217.96,-475.07"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="classspic_1_1Button.html" target="_top" xlink:title="Instances of this class are clickable user interface items.">
<polygon fill="none" stroke="black" points="80,-0.5 80,-178.5 215,-178.5 215,-0.5 80,-0.5"/>
<text text-anchor="middle" x="147.5" y="-166.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Button</text>
<polyline fill="none" stroke="black" points="80,-159.5 215,-159.5 "/>
<text text-anchor="middle" x="147.5" y="-147.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="80,-140.5 215,-140.5 "/>
<text text-anchor="start" x="88" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Button(const std::</text>
<text text-anchor="start" x="88" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">string &amp;name, const</text>
<text text-anchor="start" x="88" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Sprite &amp;sprite, const</text>
<text text-anchor="start" x="88" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string imgPath, double</text>
<text text-anchor="start" x="88" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> width, double height, bool</text>
<text text-anchor="start" x="88" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> disabled=false)</text>
<text text-anchor="start" x="88" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Render() override</text>
<text text-anchor="start" x="88" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Click()</text>
<text text-anchor="start" x="88" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void OnClick(std::function</text>
<text text-anchor="start" x="88" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; void()&gt; callback)</text>
<text text-anchor="start" x="88" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetSprite() &#45;&gt;</text>
<text text-anchor="start" x="88" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Sprite</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node4 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M209.23,-250.15C200.36,-227.21 190.66,-202.12 181.63,-178.77"/>
<polygon fill="none" stroke="midnightblue" points="205.98,-251.43 212.85,-259.49 212.51,-248.9 205.98,-251.43"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="classspic_1_1Text.html" target="_top" xlink:title="Class representing a piece of text which can be rendered. @spicapi.">
<polygon fill="none" stroke="black" points="233.5,-22.5 233.5,-156.5 433.5,-156.5 433.5,-22.5 233.5,-22.5"/>
<text text-anchor="middle" x="333.5" y="-144.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Text</text>
<polyline fill="none" stroke="black" points="233.5,-137.5 433.5,-137.5 "/>
<text text-anchor="middle" x="333.5" y="-125.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="233.5,-118.5 433.5,-118.5 "/>
<text text-anchor="start" x="241.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Text(const std::string</text>
<text text-anchor="start" x="241.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;name, double width,</text>
<text text-anchor="start" x="241.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double height, const std</text>
<text text-anchor="start" x="241.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;text, const std</text>
<text text-anchor="start" x="241.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;fontPath, int fontSize</text>
<text text-anchor="start" x="241.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">=24, Color color=Color::Black</text>
<text text-anchor="start" x="241.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">(), Alignment alignment=Alignment::center)</text>
<text text-anchor="start" x="241.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Render() override</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node5 -->
<g id="edge4" class="edge">
<title>Node3&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M271.9,-249.81C283.6,-219.54 296.74,-185.57 307.86,-156.8"/>
<polygon fill="none" stroke="midnightblue" points="268.49,-248.9 268.15,-259.49 275.02,-251.43 268.49,-248.9"/>
</g>
</g>
</svg>
