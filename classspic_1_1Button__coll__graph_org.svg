<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 ()
 -->
<!-- Title: spic::Button Pages: 1 -->
<svg width="195pt" height="1577pt"
 viewBox="0.00 0.00 195.00 1577.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1573)">
<title>spic::Button</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Instances of this class are clickable user interface items.">
<polygon fill="#bfbfbf" stroke="black" points="26,-0.5 26,-178.5 161,-178.5 161,-0.5 26,-0.5"/>
<text text-anchor="middle" x="93.5" y="-166.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Button</text>
<polyline fill="none" stroke="black" points="26,-159.5 161,-159.5 "/>
<text text-anchor="middle" x="93.5" y="-147.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="26,-140.5 161,-140.5 "/>
<text text-anchor="start" x="34" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Button(const std::</text>
<text text-anchor="start" x="34" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">string &amp;name, const</text>
<text text-anchor="start" x="34" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Sprite &amp;sprite, const</text>
<text text-anchor="start" x="34" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string imgPath, double</text>
<text text-anchor="start" x="34" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> width, double height, bool</text>
<text text-anchor="start" x="34" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> disabled=false)</text>
<text text-anchor="start" x="34" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Render() override</text>
<text text-anchor="start" x="34" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Click()</text>
<text text-anchor="start" x="34" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void OnClick(std::function</text>
<text text-anchor="start" x="34" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; void()&gt; callback)</text>
<text text-anchor="start" x="34" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetSprite() &#45;&gt;</text>
<text text-anchor="start" x="34" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Sprite</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classspic_1_1UIObject.html" target="_top" xlink:title="Base class for a user interface object like Button or Text. @spicapi.">
<polygon fill="none" stroke="black" points="32.5,-216.5 32.5,-361.5 154.5,-361.5 154.5,-216.5 32.5,-216.5"/>
<text text-anchor="middle" x="93.5" y="-349.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::UIObject</text>
<polyline fill="none" stroke="black" points="32.5,-342.5 154.5,-342.5 "/>
<text text-anchor="start" x="40.5" y="-330.5" font-family="Helvetica,sans-Serif" font-size="10.00"># double _width</text>
<text text-anchor="start" x="40.5" y="-319.5" font-family="Helvetica,sans-Serif" font-size="10.00"># double _height</text>
<polyline fill="none" stroke="black" points="32.5,-312.5 154.5,-312.5 "/>
<text text-anchor="start" x="40.5" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UIObject(const std</text>
<text text-anchor="start" x="40.5" y="-289.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, double</text>
<text text-anchor="start" x="40.5" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10.00"> width, double height)</text>
<text text-anchor="start" x="40.5" y="-267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void Render()=0</text>
<text text-anchor="start" x="40.5" y="-256.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetWidth() &#45;&gt;</text>
<text text-anchor="start" x="40.5" y="-245.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double</text>
<text text-anchor="start" x="40.5" y="-234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetHeight() &#45;&gt;</text>
<text text-anchor="start" x="40.5" y="-223.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M93.5,-206.25C93.5,-197.15 93.5,-187.85 93.5,-178.68"/>
<polygon fill="none" stroke="midnightblue" points="90,-206.42 93.5,-216.42 97,-206.42 90,-206.42"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classspic_1_1GameObject.html" target="_top" xlink:title="Any object which should be represented on screen.">
<polygon fill="none" stroke="black" points="0,-399.5 0,-1314.5 187,-1314.5 187,-399.5 0,-399.5"/>
<text text-anchor="middle" x="93.5" y="-1302.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::GameObject</text>
<polyline fill="none" stroke="black" points="0,-1295.5 187,-1295.5 "/>
<text text-anchor="start" x="8" y="-1283.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _name</text>
<text text-anchor="start" x="8" y="-1272.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _tag</text>
<text text-anchor="start" x="8" y="-1261.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool _active</text>
<text text-anchor="start" x="8" y="-1250.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _layer</text>
<text text-anchor="start" x="8" y="-1239.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::map&lt; std::string,</text>
<text text-anchor="start" x="8" y="-1228.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::vector&lt; std::shared</text>
<text text-anchor="start" x="8" y="-1217.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt; &gt; &gt; _components</text>
<text text-anchor="start" x="8" y="-1206.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-1195.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; _self</text>
<text text-anchor="start" x="8" y="-1184.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _ownerId</text>
<text text-anchor="start" x="8" y="-1173.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static std::map&lt; std</text>
<text text-anchor="start" x="8" y="-1162.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string, std::shared</text>
<text text-anchor="start" x="8" y="-1151.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; GameObject &gt; &gt; </text>
<text text-anchor="start" x="8" y="-1140.5" font-family="Helvetica,sans-Serif" font-size="10.00">_instances</text>
<polyline fill="none" stroke="black" points="0,-1133.5 187,-1133.5 "/>
<text text-anchor="start" x="8" y="-1121.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="8" y="-1110.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="8" y="-1099.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void ResetSelf()</text>
<text text-anchor="start" x="8" y="-1088.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void FixComponents()</text>
<text text-anchor="start" x="8" y="-1077.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void FixGameObjectAfterDeserialize()</text>
<text text-anchor="start" x="8" y="-1066.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-1055.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name=&quot;Null&quot;)</text>
<text text-anchor="start" x="8" y="-1044.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-1033.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, const</text>
<text text-anchor="start" x="8" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject &amp; operator</text>
<text text-anchor="start" x="8" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const GameObject &amp;other)</text>
<text text-anchor="start" x="8" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="8" y="-978.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator!=(const</text>
<text text-anchor="start" x="8" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-956.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-945.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator==(const</text>
<text text-anchor="start" x="8" y="-934.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-912.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetName() const</text>
<text text-anchor="start" x="8" y="-901.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::string</text>
<text text-anchor="start" x="8" y="-890.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void AddComponent(std</text>
<text text-anchor="start" x="8" y="-879.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Component</text>
<text text-anchor="start" x="8" y="-868.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; component)</text>
<text text-anchor="start" x="8" y="-857.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponent()</text>
<text text-anchor="start" x="8" y="-846.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; std::shared</text>
<text text-anchor="start" x="8" y="-835.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt;</text>
<text text-anchor="start" x="8" y="-824.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponents</text>
<text text-anchor="start" x="8" y="-813.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; std::vector</text>
<text text-anchor="start" x="8" y="-802.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::shared_ptr&lt; Component &gt;&gt;</text>
<text text-anchor="start" x="8" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Active(bool flag)</text>
<text text-anchor="start" x="8" y="-780.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Active() const</text>
<text text-anchor="start" x="8" y="-769.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-758.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto IsActiveInWorld</text>
<text text-anchor="start" x="8" y="-747.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-736.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetTransform()</text>
<text text-anchor="start" x="8" y="-725.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; Transform</text>
<text text-anchor="start" x="8" y="-714.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetTransform(const</text>
<text text-anchor="start" x="8" y="-703.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Transform &amp;transform)</text>
<text text-anchor="start" x="8" y="-692.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetOwnerId(int uid)</text>
<text text-anchor="start" x="8" y="-681.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetOwnerId() </text>
<text text-anchor="start" x="8" y="-670.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; int</text>
<text text-anchor="start" x="8" y="-659.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto Find(const</text>
<text text-anchor="start" x="8" y="-648.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;name, bool</text>
<text text-anchor="start" x="8" y="-637.5" font-family="Helvetica,sans-Serif" font-size="10.00"> includeInactive=false)</text>
<text text-anchor="start" x="8" y="-626.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-615.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindGameObjects</text>
<text text-anchor="start" x="8" y="-604.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithTag(const std::string</text>
<text text-anchor="start" x="8" y="-593.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;tag) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-582.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-571.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindWithTag</text>
<text text-anchor="start" x="8" y="-560.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-549.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-538.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectOf</text>
<text text-anchor="start" x="8" y="-527.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-516.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::shared_ptr</text>
<text text-anchor="start" x="8" y="-505.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-494.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectsOf</text>
<text text-anchor="start" x="8" y="-483.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-472.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-461.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-450.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="8" y="-439.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-428.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; obj)</text>
<text text-anchor="start" x="8" y="-417.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="8" y="-406.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Component *obj)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M93.5,-389.21C93.5,-379.54 93.5,-370.37 93.5,-361.8"/>
<polygon fill="none" stroke="midnightblue" points="90,-389.47 93.5,-399.47 97,-389.47 90,-389.47"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="structspic_1_1Transform.html" target="_top" xlink:title="Instances of this class represent specific 2D transformations. @spicapi.">
<polygon fill="none" stroke="black" points="36,-1362.5 36,-1441.5 151,-1441.5 151,-1362.5 36,-1362.5"/>
<text text-anchor="middle" x="93.5" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Transform</text>
<polyline fill="none" stroke="black" points="36,-1422.5 151,-1422.5 "/>
<text text-anchor="start" x="44" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double rotation</text>
<text text-anchor="start" x="44" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double scale</text>
<polyline fill="none" stroke="black" points="36,-1392.5 151,-1392.5 "/>
<text text-anchor="start" x="44" y="-1380.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="44" y="-1369.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M93.5,-1362.38C93.5,-1352.12 93.5,-1340.11 93.5,-1326.71"/>
<polygon fill="none" stroke="#404040" points="93.5,-1326.57 89.5,-1320.57 93.5,-1314.57 97.5,-1320.57 93.5,-1326.57"/>
<text text-anchor="middle" x="121" y="-1336" font-family="Helvetica,sans-Serif" font-size="10.00"> #_transform</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="structspic_1_1Point.html" target="_top" xlink:title="Struct representing both a 2D point and a 2D vector. @spicapi.">
<polygon fill="none" stroke="black" points="36,-1489.5 36,-1568.5 151,-1568.5 151,-1489.5 36,-1489.5"/>
<text text-anchor="middle" x="93.5" y="-1556.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Point</text>
<polyline fill="none" stroke="black" points="36,-1549.5 151,-1549.5 "/>
<text text-anchor="start" x="44" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double x</text>
<text text-anchor="start" x="44" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double y</text>
<polyline fill="none" stroke="black" points="36,-1519.5 151,-1519.5 "/>
<text text-anchor="start" x="44" y="-1507.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="44" y="-1496.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M93.5,-1489.48C93.5,-1478.19 93.5,-1465.67 93.5,-1453.75"/>
<polygon fill="none" stroke="#404040" points="93.5,-1453.61 89.5,-1447.61 93.5,-1441.61 97.5,-1447.61 93.5,-1453.61"/>
<text text-anchor="middle" x="115" y="-1463" font-family="Helvetica,sans-Serif" font-size="10.00"> +position</text>
</g>
</g>
</svg>
