<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="184pt" height="1379pt" viewBox="0 0 184 1379"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1375)"><title>spic::Button</title><g id="node1" class="node"><title>Node1</title><g id="a_node1"><a xlink:title="Instances of this class are clickable user interface items."><polygon fill="#bfbfbf" stroke="#000" points="20.5 -.5 20.5 -79.5 155.5 -79.5 155.5 -.5 20.5 -.5"/><text x="88" y="-67.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Button</text><polyline fill="none" stroke="#000" points="20.5 -60.5 155.5 -60.5"/><polyline fill="none" stroke="#000" points="20.5 -41.5 155.5 -41.5"/><text x="28.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Click()</text><text x="28.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void OnClick(std::function</text><text x="28.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; void()&gt; callback)</text></a></g></g><g id="node2" class="node"><title>Node2</title><g id="a_node2"><a target="_top" xlink:href="classspic_1_1UIObject.html" xlink:title="Base class for a user interface object like Button or Text. @spicapi."><polygon fill="none" stroke="#000" points="29.5 -117.5 29.5 -207.5 146.5 -207.5 146.5 -117.5 29.5 -117.5"/><text x="88" y="-195.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::UIObject</text><polyline fill="none" stroke="#000" points="29.5 -188.5 146.5 -188.5"/><polyline fill="none" stroke="#000" points="29.5 -169.5 146.5 -169.5"/><text x="37.5" y="-157.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ UIObject(const std</text><text x="37.5" y="-146.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name, const</text><text x="37.5" y="-135.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag, double</text><text x="37.5" y="-124.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">width, double height)</text></a></g></g><g id="edge1" class="edge"><title>Node2-&gt;Node1</title><path fill="none" stroke="#191970" d="M88,-107.3C88,-97.97 88,-88.43 88,-79.61"/><polygon fill="none" stroke="#191970" points="84.5 -107.31 88 -117.31 91.5 -107.31 84.5 -107.31"/></g><g id="node3" class="node"><title>Node3</title><g id="a_node3"><a target="_top" xlink:href="classspic_1_1GameObject.html" xlink:title="Any object which should be represented on screen."><polygon fill="none" stroke="#000" points="0 -245.5 0 -1116.5 176 -1116.5 176 -245.5 0 -245.5"/><text x="88" y="-1104.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::GameObject</text><polyline fill="none" stroke="#000" points="0 -1097.5 176 -1097.5"/><text x="8" y="-1085.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _name</text><text x="8" y="-1074.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _tag</text><text x="8" y="-1063.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># bool _active</text><text x="8" y="-1052.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _layer</text><text x="8" y="-1041.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::map&lt; std::string,</text><text x="8" y="-1030.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::vector&lt; std::shared</text><text x="8" y="-1019.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt; &gt; &gt; _components</text><text x="8" y="-1008.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::weak_ptr&lt; GameObject</text><text x="8" y="-997.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; _self</text><text x="8" y="-986.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _ownerId</text><text x="8" y="-975.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># static std::map&lt; std</text><text x="8" y="-964.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string, std::shared</text><text x="8" y="-953.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; GameObject &gt; &gt;</text><text x="8" y="-942.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_instances</text><polyline fill="none" stroke="#000" points="0 -935.5 176 -935.5"/><text x="8" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="8" y="-912.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text><text x="8" y="-901.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="8" y="-890.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name)</text><text x="8" y="-879.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="8" y="-868.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name, const</text><text x="8" y="-857.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag)</text><text x="8" y="-846.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject &amp; operator</text><text x="8" y="-835.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=(const GameObject &amp;other)</text><text x="8" y="-824.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ operator bool()</text><text x="8" y="-813.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator!=(const</text><text x="8" y="-802.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-780.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator==(const</text><text x="8" y="-769.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-758.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-747.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetName() -&gt; std</text><text x="8" y="-736.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string</text><text x="8" y="-725.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void AddComponent(std</text><text x="8" y="-714.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; Component</text><text x="8" y="-703.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; component)</text><text x="8" y="-692.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponent()</text><text x="8" y="-681.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const -&gt; std::shared</text><text x="8" y="-670.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt;</text><text x="8" y="-659.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponents</text><text x="8" y="-648.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; std::vector</text><text x="8" y="-637.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; std::shared_ptr&lt; Component &gt;&gt;</text><text x="8" y="-626.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Active(bool flag)</text><text x="8" y="-615.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto Active() const</text><text x="8" y="-604.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-593.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto IsActiveInWorld</text><text x="8" y="-582.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; bool</text><text x="8" y="-571.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetTransform()</text><text x="8" y="-560.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; Transform</text><text x="8" y="-549.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetTransform(const</text><text x="8" y="-538.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Transform &amp;transform)</text><text x="8" y="-527.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetOwnerId(int uid)</text><text x="8" y="-516.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetOwnerId()</text><text x="8" y="-505.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; int</text><text x="8" y="-494.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto Find(const</text><text x="8" y="-483.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;name) -&gt;</text><text x="8" y="-472.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::shared_ptr&lt; GameObject &gt;</text><text x="8" y="-461.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindGameObjects</text><text x="8" y="-450.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">WithTag(const std::string</text><text x="8" y="-439.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;tag) -&gt; std::vector&lt; std</text><text x="8" y="-428.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="8" y="-417.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindWithTag</text><text x="8" y="-406.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;tag)</text><text x="8" y="-395.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; std::shared_ptr&lt; GameObject &gt;</text><text x="8" y="-384.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectOf</text><text x="8" y="-373.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="8" y="-362.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::shared_ptr</text><text x="8" y="-351.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; GameObject &gt;</text><text x="8" y="-340.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectsOf</text><text x="8" y="-329.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="8" y="-318.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::vector&lt; std</text><text x="8" y="-307.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="8" y="-296.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-285.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(std::shared_ptr&lt; GameObject</text><text x="8" y="-274.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; obj)</text><text x="8" y="-263.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-252.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(Component *obj)</text></a></g></g><g id="edge2" class="edge"><title>Node3-&gt;Node2</title><path fill="none" stroke="#191970" d="M88,-235.1C88,-225.13 88,-215.95 88,-207.73"/><polygon fill="none" stroke="#191970" points="84.5 -235.34 88 -245.34 91.5 -235.34 84.5 -235.34"/></g><g id="node4" class="node"><title>Node4</title><g id="a_node4"><a target="_top" xlink:href="structspic_1_1Transform.html" xlink:title="Instances of this class represent specific 2D transformations. @spicapi."><polygon fill="none" stroke="#000" points="30.5 -1164.5 30.5 -1243.5 145.5 -1243.5 145.5 -1164.5 30.5 -1164.5"/><text x="88" y="-1231.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Transform</text><polyline fill="none" stroke="#000" points="30.5 -1224.5 145.5 -1224.5"/><text x="38.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double rotation</text><text x="38.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double scale</text><polyline fill="none" stroke="#000" points="30.5 -1194.5 145.5 -1194.5"/><text x="38.5" y="-1182.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="38.5" y="-1171.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text></a></g></g><g id="edge3" class="edge"><title>Node4-&gt;Node3</title><path fill="none" stroke="#404040" d="M88,-1164.27C88,-1154.05 88,-1142.11 88,-1128.82"/><polygon fill="none" stroke="#404040" points="88 -1128.79 84 -1122.79 88 -1116.79 92 -1122.79 88 -1128.79"/><text x="115.5" y="-1138" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">#_transform</text></g><g id="node5" class="node"><title>Node5</title><g id="a_node5"><a target="_top" xlink:href="structspic_1_1Point.html" xlink:title="Struct representing both a 2D point and a 2D vector. @spicapi."><polygon fill="none" stroke="#000" points="30.5 -1291.5 30.5 -1370.5 145.5 -1370.5 145.5 -1291.5 30.5 -1291.5"/><text x="88" y="-1358.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Point</text><polyline fill="none" stroke="#000" points="30.5 -1351.5 145.5 -1351.5"/><text x="38.5" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double x</text><text x="38.5" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double y</text><polyline fill="none" stroke="#000" points="30.5 -1321.5 145.5 -1321.5"/><text x="38.5" y="-1309.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="38.5" y="-1298.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text></a></g></g><g id="edge4" class="edge"><title>Node5-&gt;Node4</title><path fill="none" stroke="#404040" d="M88,-1291.48C88,-1280.19 88,-1267.67 88,-1255.75"/><polygon fill="none" stroke="#404040" points="88 -1255.61 84 -1249.61 88 -1243.61 92 -1249.61 88 -1255.61"/><text x="109.5" y="-1265" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">+position</text></g></g></svg>