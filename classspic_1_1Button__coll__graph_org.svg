<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 ()
 -->
<!-- Title: spic::Button Pages: 1 -->
<svg width="195pt" height="2149pt"
 viewBox="0.00 0.00 195.00 2149.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2145)">
<title>spic::Button</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Instances of this class are clickable user interface items.">
<polygon fill="#bfbfbf" stroke="black" points="26,-0.5 26,-211.5 161,-211.5 161,-0.5 26,-0.5"/>
<text text-anchor="middle" x="93.5" y="-199.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Button</text>
<polyline fill="none" stroke="black" points="26,-192.5 161,-192.5 "/>
<text text-anchor="middle" x="93.5" y="-180.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="26,-173.5 161,-173.5 "/>
<text text-anchor="start" x="34" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="34" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="34" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Button(const std::</text>
<text text-anchor="start" x="34" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">string &amp;name, const</text>
<text text-anchor="start" x="34" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Sprite &amp;sprite, const</text>
<text text-anchor="start" x="34" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string imgPath, double</text>
<text text-anchor="start" x="34" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> width, double height, bool</text>
<text text-anchor="start" x="34" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00"> disabled=false)</text>
<text text-anchor="start" x="34" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Button()</text>
<text text-anchor="start" x="34" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Render() override</text>
<text text-anchor="start" x="34" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Click()</text>
<text text-anchor="start" x="34" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void OnClick(std::function</text>
<text text-anchor="start" x="34" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; void()&gt; callback)</text>
<text text-anchor="start" x="34" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetSprite() &#45;&gt;</text>
<text text-anchor="start" x="34" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Sprite</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classspic_1_1UIObject.html" target="_top" xlink:title="Base class for a user interface object like Button or Text. @spicapi.">
<polygon fill="none" stroke="black" points="32.5,-249.5 32.5,-416.5 154.5,-416.5 154.5,-249.5 32.5,-249.5"/>
<text text-anchor="middle" x="93.5" y="-404.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::UIObject</text>
<polyline fill="none" stroke="black" points="32.5,-397.5 154.5,-397.5 "/>
<text text-anchor="start" x="40.5" y="-385.5" font-family="Helvetica,sans-Serif" font-size="10.00"># double _width</text>
<text text-anchor="start" x="40.5" y="-374.5" font-family="Helvetica,sans-Serif" font-size="10.00"># double _height</text>
<polyline fill="none" stroke="black" points="32.5,-367.5 154.5,-367.5 "/>
<text text-anchor="start" x="40.5" y="-355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="40.5" y="-344.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="40.5" y="-333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UIObject(const std</text>
<text text-anchor="start" x="40.5" y="-322.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, double</text>
<text text-anchor="start" x="40.5" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00"> width, double height)</text>
<text text-anchor="start" x="40.5" y="-300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual void Render()=0</text>
<text text-anchor="start" x="40.5" y="-289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetWidth() &#45;&gt;</text>
<text text-anchor="start" x="40.5" y="-278.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double</text>
<text text-anchor="start" x="40.5" y="-267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetHeight() &#45;&gt;</text>
<text text-anchor="start" x="40.5" y="-256.5" font-family="Helvetica,sans-Serif" font-size="10.00"> double</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M93.5,-239.31C93.5,-230.21 93.5,-220.93 93.5,-211.72"/>
<polygon fill="none" stroke="midnightblue" points="90,-239.5 93.5,-249.5 97,-239.5 90,-239.5"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classspic_1_1GameObject.html" target="_top" xlink:title="Any object which should be represented on screen.">
<polygon fill="none" stroke="black" points="0,-454.5 0,-1523.5 187,-1523.5 187,-454.5 0,-454.5"/>
<text text-anchor="middle" x="93.5" y="-1511.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::GameObject</text>
<polyline fill="none" stroke="black" points="0,-1504.5 187,-1504.5 "/>
<text text-anchor="start" x="8" y="-1492.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _name</text>
<text text-anchor="start" x="8" y="-1481.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _tag</text>
<text text-anchor="start" x="8" y="-1470.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool _active</text>
<text text-anchor="start" x="8" y="-1459.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _layer</text>
<text text-anchor="start" x="8" y="-1448.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::map&lt; std::string,</text>
<text text-anchor="start" x="8" y="-1437.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::vector&lt; std::shared</text>
<text text-anchor="start" x="8" y="-1426.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt; &gt; &gt; _components</text>
<text text-anchor="start" x="8" y="-1415.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-1404.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; _self</text>
<text text-anchor="start" x="8" y="-1393.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _ownerId</text>
<text text-anchor="start" x="8" y="-1382.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static std::map&lt; std</text>
<text text-anchor="start" x="8" y="-1371.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string, std::shared</text>
<text text-anchor="start" x="8" y="-1360.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; GameObject &gt; &gt; </text>
<text text-anchor="start" x="8" y="-1349.5" font-family="Helvetica,sans-Serif" font-size="10.00">_instances</text>
<polyline fill="none" stroke="black" points="0,-1342.5 187,-1342.5 "/>
<text text-anchor="start" x="8" y="-1330.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="8" y="-1319.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="8" y="-1308.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void ResetSelf()</text>
<text text-anchor="start" x="8" y="-1297.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void FixComponents()</text>
<text text-anchor="start" x="8" y="-1286.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void FixGameObjectAfterDeserialize()</text>
<text text-anchor="start" x="8" y="-1275.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name=&quot;Null&quot;)</text>
<text text-anchor="start" x="8" y="-1253.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-1242.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, const</text>
<text text-anchor="start" x="8" y="-1231.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-1220.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const GameObject</text>
<text text-anchor="start" x="8" y="-1209.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;other)=default</text>
<text text-anchor="start" x="8" y="-1198.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator=(const</text>
<text text-anchor="start" x="8" y="-1187.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-1176.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; GameObject &amp;</text>
<text text-anchor="start" x="8" y="-1165.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(GameObject</text>
<text text-anchor="start" x="8" y="-1154.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;other)=default</text>
<text text-anchor="start" x="8" y="-1143.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator=(GameObject</text>
<text text-anchor="start" x="8" y="-1132.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;other) &#45;&gt; GameObject</text>
<text text-anchor="start" x="8" y="-1121.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;=default</text>
<text text-anchor="start" x="8" y="-1110.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~GameObject</text>
<text text-anchor="start" x="8" y="-1099.5" font-family="Helvetica,sans-Serif" font-size="10.00">()=default</text>
<text text-anchor="start" x="8" y="-1088.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="8" y="-1077.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator!=(const</text>
<text text-anchor="start" x="8" y="-1066.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-1055.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-1044.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator==(const</text>
<text text-anchor="start" x="8" y="-1033.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-1022.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetName() const</text>
<text text-anchor="start" x="8" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::string</text>
<text text-anchor="start" x="8" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetTag() const</text>
<text text-anchor="start" x="8" y="-978.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::string</text>
<text text-anchor="start" x="8" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void AddComponent(std</text>
<text text-anchor="start" x="8" y="-956.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Component</text>
<text text-anchor="start" x="8" y="-945.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; component)</text>
<text text-anchor="start" x="8" y="-934.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponent()</text>
<text text-anchor="start" x="8" y="-923.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; std::shared</text>
<text text-anchor="start" x="8" y="-912.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt;</text>
<text text-anchor="start" x="8" y="-901.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponents</text>
<text text-anchor="start" x="8" y="-890.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; std::vector</text>
<text text-anchor="start" x="8" y="-879.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::shared_ptr&lt; Component &gt;&gt;</text>
<text text-anchor="start" x="8" y="-868.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Active(bool flag)</text>
<text text-anchor="start" x="8" y="-857.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Active() const</text>
<text text-anchor="start" x="8" y="-846.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-835.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto IsActiveInWorld</text>
<text text-anchor="start" x="8" y="-824.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-813.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetTransform()</text>
<text text-anchor="start" x="8" y="-802.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; Transform</text>
<text text-anchor="start" x="8" y="-791.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetTransform(const</text>
<text text-anchor="start" x="8" y="-780.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Transform &amp;transform)</text>
<text text-anchor="start" x="8" y="-769.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetOwnerId(int uid)</text>
<text text-anchor="start" x="8" y="-758.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetOwnerId() </text>
<text text-anchor="start" x="8" y="-747.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; int</text>
<text text-anchor="start" x="8" y="-736.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto Find(const</text>
<text text-anchor="start" x="8" y="-725.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;name, bool</text>
<text text-anchor="start" x="8" y="-714.5" font-family="Helvetica,sans-Serif" font-size="10.00"> includeInactive=false)</text>
<text text-anchor="start" x="8" y="-703.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-692.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindGameObjects</text>
<text text-anchor="start" x="8" y="-681.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithTag(const std::string</text>
<text text-anchor="start" x="8" y="-670.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;tag) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-659.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-648.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindWithTag</text>
<text text-anchor="start" x="8" y="-637.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-626.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-615.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectOf</text>
<text text-anchor="start" x="8" y="-604.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-593.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::shared_ptr</text>
<text text-anchor="start" x="8" y="-582.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-571.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectsOf</text>
<text text-anchor="start" x="8" y="-560.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-549.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-538.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-527.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto GetInstances</text>
<text text-anchor="start" x="8" y="-516.5" font-family="Helvetica,sans-Serif" font-size="10.00">(bool includeInactive=false)</text>
<text text-anchor="start" x="8" y="-505.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::vector&lt; std::shared</text>
<text text-anchor="start" x="8" y="-494.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-483.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="8" y="-472.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-461.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; obj)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M93.5,-444.16C93.5,-434.55 93.5,-425.39 93.5,-416.77"/>
<polygon fill="none" stroke="midnightblue" points="90,-444.33 93.5,-454.33 97,-444.33 90,-444.33"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="structspic_1_1Transform.html" target="_top" xlink:title="Instances of this class represent specific 2D transformations. @spicapi.">
<polygon fill="none" stroke="black" points="36,-1571.5 36,-1650.5 151,-1650.5 151,-1571.5 36,-1571.5"/>
<text text-anchor="middle" x="93.5" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Transform</text>
<polyline fill="none" stroke="black" points="36,-1631.5 151,-1631.5 "/>
<text text-anchor="start" x="44" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double rotation</text>
<text text-anchor="start" x="44" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double scale</text>
<polyline fill="none" stroke="black" points="36,-1601.5 151,-1601.5 "/>
<text text-anchor="start" x="44" y="-1589.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="44" y="-1578.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#404040" d="M93.5,-1571.22C93.5,-1561.02 93.5,-1549.07 93.5,-1535.69"/>
<polygon fill="none" stroke="#404040" points="93.5,-1535.57 89.5,-1529.57 93.5,-1523.57 97.5,-1529.57 93.5,-1535.57"/>
<text text-anchor="middle" x="121" y="-1545" font-family="Helvetica,sans-Serif" font-size="10.00"> #_transform</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="structspic_1_1Point.html" target="_top" xlink:title="Struct representing both a 2D point and a 2D vector. @spicapi.">
<polygon fill="none" stroke="black" points="24.5,-1698.5 24.5,-2140.5 162.5,-2140.5 162.5,-1698.5 24.5,-1698.5"/>
<text text-anchor="middle" x="93.5" y="-2128.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Point</text>
<polyline fill="none" stroke="black" points="24.5,-2121.5 162.5,-2121.5 "/>
<text text-anchor="start" x="32.5" y="-2109.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double x</text>
<text text-anchor="start" x="32.5" y="-2098.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double y</text>
<polyline fill="none" stroke="black" points="24.5,-2091.5 162.5,-2091.5 "/>
<text text-anchor="start" x="32.5" y="-2079.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="32.5" y="-2068.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="32.5" y="-2057.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator/(float</text>
<text text-anchor="start" x="32.5" y="-2046.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;Obj) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-2035.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator/(double</text>
<text text-anchor="start" x="32.5" y="-2024.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;Obj) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-2013.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator/(Point</text>
<text text-anchor="start" x="32.5" y="-2002.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;Obj) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-1991.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator*(double</text>
<text text-anchor="start" x="32.5" y="-1980.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Obj) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-1969.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator*=(float</text>
<text text-anchor="start" x="32.5" y="-1958.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;Obj) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-1947.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator*(const</text>
<text text-anchor="start" x="32.5" y="-1936.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Point &amp;Obj) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-1925.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator+(const</text>
<text text-anchor="start" x="32.5" y="-1914.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Point &amp;Obj) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-1903.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator+=(Point</text>
<text text-anchor="start" x="32.5" y="-1892.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Obj) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-1881.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator&#45;(const</text>
<text text-anchor="start" x="32.5" y="-1870.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Point &amp;Obj) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-1859.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double Length() const</text>
<text text-anchor="start" x="32.5" y="-1848.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Equals(Point Obj)</text>
<text text-anchor="start" x="32.5" y="-1837.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; bool</text>
<text text-anchor="start" x="32.5" y="-1826.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Normalize()</text>
<text text-anchor="start" x="32.5" y="-1815.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Truncate(float</text>
<text text-anchor="start" x="32.5" y="-1804.5" font-family="Helvetica,sans-Serif" font-size="10.00"> max) &#45;&gt; Point</text>
<text text-anchor="start" x="32.5" y="-1793.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto LengthSq() const</text>
<text text-anchor="start" x="32.5" y="-1782.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; double</text>
<text text-anchor="start" x="32.5" y="-1771.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Dot(const Point</text>
<text text-anchor="start" x="32.5" y="-1760.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;other) const &#45;&gt; double</text>
<text text-anchor="start" x="32.5" y="-1749.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Distance(const</text>
<text text-anchor="start" x="32.5" y="-1738.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Point &amp;other) const</text>
<text text-anchor="start" x="32.5" y="-1727.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; float</text>
<text text-anchor="start" x="32.5" y="-1716.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto PointNormalize</text>
<text text-anchor="start" x="32.5" y="-1705.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const Point &amp;v) &#45;&gt; Point</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="#404040" d="M93.5,-1698.19C93.5,-1685.61 93.5,-1673.77 93.5,-1663.14"/>
<polygon fill="none" stroke="#404040" points="93.5,-1662.8 89.5,-1656.8 93.5,-1650.8 97.5,-1656.8 93.5,-1662.8"/>
<text text-anchor="middle" x="115" y="-1672" font-family="Helvetica,sans-Serif" font-size="10.00"> +position</text>
</g>
</g>
</svg>
