<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="184pt" height="1512" viewBox="0 0 184 1134"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1130)"><title>spic::GameObject</title><g id="node1" class="node"><title>Node1</title><g id="a_node1"><a xlink:title="Any object which should be represented on screen."><polygon fill="#bfbfbf" stroke="#000" points="0 -.5 0 -871.5 176 -871.5 176 -.5 0 -.5"/><text x="88" y="-859.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::GameObject</text><polyline fill="none" stroke="#000" points="0 -852.5 176 -852.5"/><text x="8" y="-840.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _name</text><text x="8" y="-829.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::string _tag</text><text x="8" y="-818.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># bool _active</text><text x="8" y="-807.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _layer</text><text x="8" y="-796.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::map&lt; std::string,</text><text x="8" y="-785.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::vector&lt; std::shared</text><text x="8" y="-774.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt; &gt; &gt; _components</text><text x="8" y="-763.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># std::weak_ptr&lt; GameObject</text><text x="8" y="-752.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; _self</text><text x="8" y="-741.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># int _ownerId</text><text x="8" y="-730.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start"># static std::map&lt; std</text><text x="8" y="-719.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string, std::shared</text><text x="8" y="-708.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; GameObject &gt; &gt;</text><text x="8" y="-697.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_instances</text><polyline fill="none" stroke="#000" points="0 -690.5 176 -690.5"/><text x="8" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="8" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text><text x="8" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="8" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name)</text><text x="8" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject(const std</text><text x="8" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string &amp;name, const</text><text x="8" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;tag)</text><text x="8" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ GameObject &amp; operator</text><text x="8" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=(const GameObject &amp;other)</text><text x="8" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ operator bool()</text><text x="8" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator!=(const</text><text x="8" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto operator==(const</text><text x="8" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">GameObject &amp;other)</text><text x="8" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetName() -&gt; std</text><text x="8" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::string</text><text x="8" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void AddComponent(std</text><text x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; Component</text><text x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; component)</text><text x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponent()</text><text x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">const -&gt; std::shared</text><text x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">_ptr&lt; Component &gt;</text><text x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetComponents</text><text x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; std::vector</text><text x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; std::shared_ptr&lt; Component &gt;&gt;</text><text x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void Active(bool flag)</text><text x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto Active() const</text><text x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; bool</text><text x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto IsActiveInWorld</text><text x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">() const -&gt; bool</text><text x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetTransform()</text><text x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; Transform</text><text x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetTransform(const</text><text x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Transform &amp;transform)</text><text x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void SetOwnerId(int uid)</text><text x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ auto GetOwnerId()</text><text x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; int</text><text x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto Find(const</text><text x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::string &amp;name) -&gt;</text><text x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">std::shared_ptr&lt; GameObject &gt;</text><text x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindGameObjects</text><text x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">WithTag(const std::string</text><text x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;tag) -&gt; std::vector&lt; std</text><text x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindWithTag</text><text x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(const std::string &amp;tag)</text><text x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">-&gt; std::shared_ptr&lt; GameObject &gt;</text><text x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectOf</text><text x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::shared_ptr</text><text x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&lt; GameObject &gt;</text><text x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static auto FindObjectsOf</text><text x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">Type(bool includeInactive</text><text x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">=false) -&gt; std::vector&lt; std</text><text x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">::shared_ptr&lt; GameObject &gt;&gt;</text><text x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(std::shared_ptr&lt; GameObject</text><text x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&gt; obj)</text><text x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ static void Destroy</text><text x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">(Component *obj)</text></a></g></g><g id="node2" class="node"><title>Node2</title><g id="a_node2"><a target="_top" xlink:href="structspic_1_1Transform.html" xlink:title="Instances of this class represent specific 2D transformations. @spicapi."><polygon fill="none" stroke="#000" points="30.5 -919.5 30.5 -998.5 145.5 -998.5 145.5 -919.5 30.5 -919.5"/><text x="88" y="-986.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Transform</text><polyline fill="none" stroke="#000" points="30.5 -979.5 145.5 -979.5"/><text x="38.5" y="-967.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double rotation</text><text x="38.5" y="-956.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double scale</text><polyline fill="none" stroke="#000" points="30.5 -949.5 145.5 -949.5"/><text x="38.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="38.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text></a></g></g><g id="edge1" class="edge"><title>Node2-&gt;Node1</title><path fill="none" stroke="#404040" d="M88,-919.27C88,-909.05 88,-897.11 88,-883.82"/><polygon fill="none" stroke="#404040" points="88 -883.79 84 -877.79 88 -871.79 92 -877.79 88 -883.79"/><text x="115.5" y="-893" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">#_transform</text></g><g id="node3" class="node"><title>Node3</title><g id="a_node3"><a target="_top" xlink:href="structspic_1_1Point.html" xlink:title="Struct representing both a 2D point and a 2D vector. @spicapi."><polygon fill="none" stroke="#000" points="30.5 -1046.5 30.5 -1125.5 145.5 -1125.5 145.5 -1046.5 30.5 -1046.5"/><text x="88" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">spic::Point</text><polyline fill="none" stroke="#000" points="30.5 -1106.5 145.5 -1106.5"/><text x="38.5" y="-1094.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double x</text><text x="38.5" y="-1083.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ double y</text><polyline fill="none" stroke="#000" points="30.5 -1076.5 145.5 -1076.5"/><text x="38.5" y="-1064.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">+ void serialize(archive</text><text x="38.5" y="-1053.5" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="start">&amp;ar, const unsigned)</text></a></g></g><g id="edge2" class="edge"><title>Node3-&gt;Node2</title><path fill="none" stroke="#404040" d="M88,-1046.48C88,-1035.19 88,-1022.67 88,-1010.75"/><polygon fill="none" stroke="#404040" points="88 -1010.61 84 -1004.61 88 -998.61 92 -1004.61 88 -1010.61"/><text x="109.5" y="-1020" font-family="Helvetica,sans-Serif" font-size="10" text-anchor="middle">+position</text></g></g></svg>