<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 ()
 -->
<!-- Title: spic::GameObject Pages: 1 -->
<svg width="195pt" height="1178pt"
 viewBox="0.00 0.00 195.00 1178.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1174)">
<title>spic::GameObject</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Any object which should be represented on screen.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-915.5 187,-915.5 187,-0.5 0,-0.5"/>
<text text-anchor="middle" x="93.5" y="-903.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::GameObject</text>
<polyline fill="none" stroke="black" points="0,-896.5 187,-896.5 "/>
<text text-anchor="start" x="8" y="-884.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _name</text>
<text text-anchor="start" x="8" y="-873.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _tag</text>
<text text-anchor="start" x="8" y="-862.5" font-family="Helvetica,sans-Serif" font-size="10.00"># bool _active</text>
<text text-anchor="start" x="8" y="-851.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _layer</text>
<text text-anchor="start" x="8" y="-840.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::map&lt; std::string,</text>
<text text-anchor="start" x="8" y="-829.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::vector&lt; std::shared</text>
<text text-anchor="start" x="8" y="-818.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt; &gt; &gt; _components</text>
<text text-anchor="start" x="8" y="-807.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-796.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; _self</text>
<text text-anchor="start" x="8" y="-785.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _ownerId</text>
<text text-anchor="start" x="8" y="-774.5" font-family="Helvetica,sans-Serif" font-size="10.00"># static std::map&lt; std</text>
<text text-anchor="start" x="8" y="-763.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string, std::shared</text>
<text text-anchor="start" x="8" y="-752.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; GameObject &gt; &gt; </text>
<text text-anchor="start" x="8" y="-741.5" font-family="Helvetica,sans-Serif" font-size="10.00">_instances</text>
<polyline fill="none" stroke="black" points="0,-734.5 187,-734.5 "/>
<text text-anchor="start" x="8" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="8" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="8" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void ResetSelf()</text>
<text text-anchor="start" x="8" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void FixComponents()</text>
<text text-anchor="start" x="8" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void FixGameObjectAfterDeserialize()</text>
<text text-anchor="start" x="8" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name=&quot;Null&quot;)</text>
<text text-anchor="start" x="8" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject(const std</text>
<text text-anchor="start" x="8" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string &amp;name, const</text>
<text text-anchor="start" x="8" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GameObject &amp; operator</text>
<text text-anchor="start" x="8" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">=(const GameObject &amp;other)</text>
<text text-anchor="start" x="8" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator bool()</text>
<text text-anchor="start" x="8" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator!=(const</text>
<text text-anchor="start" x="8" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator==(const</text>
<text text-anchor="start" x="8" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00"> GameObject &amp;other) </text>
<text text-anchor="start" x="8" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetName() const</text>
<text text-anchor="start" x="8" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::string</text>
<text text-anchor="start" x="8" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void AddComponent(std</text>
<text text-anchor="start" x="8" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; Component</text>
<text text-anchor="start" x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; component)</text>
<text text-anchor="start" x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponent()</text>
<text text-anchor="start" x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; std::shared</text>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">_ptr&lt; Component &gt;</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetComponents</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; std::vector</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; std::shared_ptr&lt; Component &gt;&gt;</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Active(bool flag)</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Active() const</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto IsActiveInWorld</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; bool</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetTransform()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; Transform</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetTransform(const</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Transform &amp;transform)</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetOwnerId(int uid)</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetOwnerId() </text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45;&gt; int</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto Find(const</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::string &amp;name, bool</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00"> includeInactive=false)</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindGameObjects</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithTag(const std::string</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;tag) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindWithTag</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">(const std::string &amp;tag)</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; std::shared_ptr&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectOf</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::shared_ptr</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; GameObject &gt;</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static auto FindObjectsOf</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type(bool includeInactive</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">=false) &#45;&gt; std::vector&lt; std</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">::shared_ptr&lt; GameObject &gt;&gt;</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::shared_ptr&lt; GameObject</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; obj)</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ static void Destroy</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">(Component *obj)</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="structspic_1_1Transform.html" target="_top" xlink:title="Instances of this class represent specific 2D transformations. @spicapi.">
<polygon fill="none" stroke="black" points="36,-963.5 36,-1042.5 151,-1042.5 151,-963.5 36,-963.5"/>
<text text-anchor="middle" x="93.5" y="-1030.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Transform</text>
<polyline fill="none" stroke="black" points="36,-1023.5 151,-1023.5 "/>
<text text-anchor="start" x="44" y="-1011.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double rotation</text>
<text text-anchor="start" x="44" y="-1000.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double scale</text>
<polyline fill="none" stroke="black" points="36,-993.5 151,-993.5 "/>
<text text-anchor="start" x="44" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="44" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M93.5,-963.38C93.5,-953.12 93.5,-941.11 93.5,-927.71"/>
<polygon fill="none" stroke="#404040" points="93.5,-927.57 89.5,-921.57 93.5,-915.57 97.5,-921.57 93.5,-927.57"/>
<text text-anchor="middle" x="121" y="-937" font-family="Helvetica,sans-Serif" font-size="10.00"> #_transform</text>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="structspic_1_1Point.html" target="_top" xlink:title="Struct representing both a 2D point and a 2D vector. @spicapi.">
<polygon fill="none" stroke="black" points="36,-1090.5 36,-1169.5 151,-1169.5 151,-1090.5 36,-1090.5"/>
<text text-anchor="middle" x="93.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Point</text>
<polyline fill="none" stroke="black" points="36,-1150.5 151,-1150.5 "/>
<text text-anchor="start" x="44" y="-1138.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double x</text>
<text text-anchor="start" x="44" y="-1127.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ double y</text>
<polyline fill="none" stroke="black" points="36,-1120.5 151,-1120.5 "/>
<text text-anchor="start" x="44" y="-1108.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="44" y="-1097.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M93.5,-1090.48C93.5,-1079.19 93.5,-1066.67 93.5,-1054.75"/>
<polygon fill="none" stroke="#404040" points="93.5,-1054.61 89.5,-1048.61 93.5,-1042.61 97.5,-1048.61 93.5,-1054.61"/>
<text text-anchor="middle" x="115" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00"> +position</text>
</g>
</g>
</svg>
