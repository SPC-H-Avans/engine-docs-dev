<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.0 ()
 -->
<!-- Title: spic::Sprite Pages: 1 -->
<svg width="210pt" height="991pt"
 viewBox="0.00 0.00 210.00 991.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 987)">
<title>spic::Sprite</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="A component representing a sprite (small image) @spicapi.">
<polygon fill="#bfbfbf" stroke="black" points="0,-303.5 0,-646.5 202,-646.5 202,-303.5 0,-303.5"/>
<text text-anchor="middle" x="101" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Sprite</text>
<polyline fill="none" stroke="black" points="0,-627.5 202,-627.5 "/>
<text text-anchor="start" x="8" y="-615.5" font-family="Helvetica,sans-Serif" font-size="10.00"># std::string _spriteId</text>
<text text-anchor="start" x="8" y="-604.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _spriteWidth</text>
<text text-anchor="start" x="8" y="-593.5" font-family="Helvetica,sans-Serif" font-size="10.00"># int _spriteHeight</text>
<text text-anchor="start" x="8" y="-582.5" font-family="Helvetica,sans-Serif" font-size="10.00"># double _spriteScale</text>
<polyline fill="none" stroke="black" points="0,-575.5 202,-575.5 "/>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Sprite(std::string</text>
<text text-anchor="start" x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00"> spriteId, int spriteWidth,</text>
<text text-anchor="start" x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int spriteHeight, int sortingLayer</text>
<text text-anchor="start" x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1, int orderInLayer=1, platformer</text>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">_engine::SPIC_RendererFlip flip=platformer</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">_engine::FLIP_NONE, Color color=Color::</text>
<text text-anchor="start" x="8" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">Transparent(), double spriteScale=1.0, int</text>
<text text-anchor="start" x="8" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00"> spriteSheetX=0, int spriteSheetY=0)</text>
<text text-anchor="start" x="8" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetSpriteId()</text>
<text text-anchor="start" x="8" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00"> const &#45;&gt; std::string</text>
<text text-anchor="start" x="8" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetSpriteScale</text>
<text text-anchor="start" x="8" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; double</text>
<text text-anchor="start" x="8" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Render(spic::Transform</text>
<text text-anchor="start" x="8" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00"> transform)</text>
<text text-anchor="start" x="8" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetFlip(platformer</text>
<text text-anchor="start" x="8" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">_engine::SPIC_RendererFlip flip)</text>
<text text-anchor="start" x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetColor(Color</text>
<text text-anchor="start" x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00"> color)</text>
<text text-anchor="start" x="8" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetSpriteScale</text>
<text text-anchor="start" x="8" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">(double spriteScale)</text>
<text text-anchor="start" x="8" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetSpriteSheetPosition</text>
<text text-anchor="start" x="8" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">(int x, int y)</text>
</a>
</g>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="classplatformer__engine_1_1AnimatedSprite.html" target="_top" xlink:title="AnimatedSprite class which is used to animate sprites.">
<polygon fill="none" stroke="black" points="0,-0.5 0,-266.5 202,-266.5 202,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-254.5" font-family="Helvetica,sans-Serif" font-size="10.00">platformer_engine::</text>
<text text-anchor="middle" x="101" y="-243.5" font-family="Helvetica,sans-Serif" font-size="10.00">AnimatedSprite</text>
<polyline fill="none" stroke="black" points="0,-236.5 202,-236.5 "/>
<text text-anchor="middle" x="101" y="-224.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-217.5 202,-217.5 "/>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AnimatedSprite(std</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">::string spriteId, int</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00"> spriteWidth, int spriteHeight,</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> int frameCount, int sortingLayer</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">=1, int orderInLayer=1, int animationSpeed</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">=100, int spriteRow=1, platformer_engine</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">::SPIC_RendererFlip flip=platformer_engine</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">::FLIP_NONE, spic::Color color=spic::Color</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">::Transparent(), double spriteScale=1.0)</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Update()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Draw(spic::Transform</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> transform)</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void ResetCurrentFrame()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetCurrentFrame</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; int</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto GetFrameCount</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">() const &#45;&gt; int</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node1&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M101,-293.24C101,-284.38 101,-275.56 101,-266.87"/>
<polygon fill="none" stroke="midnightblue" points="97.5,-293.26 101,-303.26 104.5,-293.26 97.5,-293.26"/>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classspic_1_1Component.html" target="_top" xlink:title="Base class for all components.">
<polygon fill="none" stroke="black" points="24.5,-683.5 24.5,-982.5 177.5,-982.5 177.5,-683.5 24.5,-683.5"/>
<text text-anchor="middle" x="101" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">spic::Component</text>
<polyline fill="none" stroke="black" points="24.5,-963.5 177.5,-963.5 "/>
<text text-anchor="middle" x="101" y="-951.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="24.5,-944.5 177.5,-944.5 "/>
<text text-anchor="start" x="32.5" y="-932.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void serialize(archive</text>
<text text-anchor="start" x="32.5" y="-921.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;ar, const unsigned)</text>
<text text-anchor="start" x="32.5" y="-910.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Component()=default</text>
<text text-anchor="start" x="32.5" y="-899.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ virtual ~Component</text>
<text text-anchor="start" x="32.5" y="-888.5" font-family="Helvetica,sans-Serif" font-size="10.00">()=default</text>
<text text-anchor="start" x="32.5" y="-877.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Component(const Component</text>
<text text-anchor="start" x="32.5" y="-866.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;other)=default</text>
<text text-anchor="start" x="32.5" y="-855.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator=(const</text>
<text text-anchor="start" x="32.5" y="-844.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Component &amp;other) &#45;&gt;</text>
<text text-anchor="start" x="32.5" y="-833.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Component &amp;=default</text>
<text text-anchor="start" x="32.5" y="-822.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Component(Component</text>
<text text-anchor="start" x="32.5" y="-811.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;other)=default</text>
<text text-anchor="start" x="32.5" y="-800.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto operator=(Component</text>
<text text-anchor="start" x="32.5" y="-789.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;&amp;other) &#45;&gt; Component</text>
<text text-anchor="start" x="32.5" y="-778.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp;=default</text>
<text text-anchor="start" x="32.5" y="-767.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ auto Active() const</text>
<text text-anchor="start" x="32.5" y="-756.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &#45;&gt; bool</text>
<text text-anchor="start" x="32.5" y="-745.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void Active(bool flag)</text>
<text text-anchor="start" x="32.5" y="-734.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ void SetGameObject</text>
<text text-anchor="start" x="32.5" y="-723.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="32.5" y="-712.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; gObj)</text>
<text text-anchor="start" x="32.5" y="-701.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ std::weak_ptr&lt; GameObject</text>
<text text-anchor="start" x="32.5" y="-690.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; GetGameObject()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M101,-673.09C101,-664.33 101,-655.5 101,-646.7"/>
<polygon fill="none" stroke="midnightblue" points="97.5,-673.34 101,-683.34 104.5,-673.34 97.5,-673.34"/>
</g>
</g>
</svg>
